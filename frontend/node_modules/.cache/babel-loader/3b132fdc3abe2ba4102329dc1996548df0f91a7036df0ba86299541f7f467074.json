{"ast":null,"code":"var _jsxFileName = \"D:\\\\react movie website\\\\frontend\\\\src\\\\components\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// contexts/AuthContext.js\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport url from '../../constants/url';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true); // Loading state for initial auth check\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  // Check authentication status on app load\n  useEffect(() => {\n    checkAuthStatus();\n  }, []);\n  const checkAuthStatus = async () => {\n    try {\n      // First check localStorage\n      const storedUser = localStorage.getItem('user');\n      if (storedUser) {\n        const userData = JSON.parse(storedUser);\n        setUser(userData);\n        setIsAuthenticated(true);\n\n        // Optionally verify with backend\n        await verifyTokenWithBackend();\n      }\n    } catch (error) {\n      console.error('Auth check error:', error);\n      // Clear invalid data\n      logout();\n    } finally {\n      setLoading(false);\n    }\n  };\n  const verifyTokenWithBackend = async () => {\n    try {\n      const response = await axios.get(`${url}/api/auth/verify`, {\n        withCredentials: true\n      });\n      if (response.data.user) {\n        setUser(response.data.user);\n        setIsAuthenticated(true);\n        localStorage.setItem('user', JSON.stringify(response.data.user));\n      }\n    } catch (error) {\n      // Token is invalid, clear auth state\n      logout();\n    }\n  };\n  const login = async credentials => {\n    try {\n      const endpoint = credentials.email ? '/api/auth/signup' : '/api/auth/signin';\n      const response = await axios.post(`${url}${endpoint}`, credentials, {\n        withCredentials: true\n      });\n      const userData = response.data.user;\n      setUser(userData);\n      setIsAuthenticated(true);\n      localStorage.setItem('user', JSON.stringify(userData));\n      return {\n        success: true,\n        user: userData\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Login error:', error);\n      return {\n        success: false,\n        error: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Authentication failed'\n      };\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    setIsAuthenticated(false);\n    localStorage.removeItem('user');\n    // Optionally call backend logout endpoint\n    logoutFromBackend();\n  };\n  const logoutFromBackend = async () => {\n    try {\n      await axios.post(`${url}/api/auth/logout`, {}, {\n        withCredentials: true\n      });\n    } catch (error) {\n      console.error('Backend logout error:', error);\n    }\n  };\n  const value = {\n    user,\n    isAuthenticated,\n    loading,\n    login,\n    logout,\n    checkAuthStatus\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"xBgiRagNfQVCfEr2dT2PptfN+TE=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","url","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","isAuthenticated","setIsAuthenticated","checkAuthStatus","storedUser","localStorage","getItem","userData","JSON","parse","verifyTokenWithBackend","error","console","logout","response","get","withCredentials","data","setItem","stringify","login","credentials","endpoint","email","post","success","_error$response","_error$response$data","message","removeItem","logoutFromBackend","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/react movie website/frontend/src/components/contexts/AuthContext.js"],"sourcesContent":["// contexts/AuthContext.js\r\nimport React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport url from '../../constants/url';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true); // Loading state for initial auth check\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n  // Check authentication status on app load\r\n  useEffect(() => {\r\n    checkAuthStatus();\r\n  }, []);\r\n\r\n  const checkAuthStatus = async () => {\r\n    try {\r\n      // First check localStorage\r\n      const storedUser = localStorage.getItem('user');\r\n      if (storedUser) {\r\n        const userData = JSON.parse(storedUser);\r\n        setUser(userData);\r\n        setIsAuthenticated(true);\r\n        \r\n        // Optionally verify with backend\r\n        await verifyTokenWithBackend();\r\n      }\r\n    } catch (error) {\r\n      console.error('Auth check error:', error);\r\n      // Clear invalid data\r\n      logout();\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const verifyTokenWithBackend = async () => {\r\n    try {\r\n      const response = await axios.get(`${url}/api/auth/verify`, {\r\n        withCredentials: true,\r\n      });\r\n      \r\n      if (response.data.user) {\r\n        setUser(response.data.user);\r\n        setIsAuthenticated(true);\r\n        localStorage.setItem('user', JSON.stringify(response.data.user));\r\n      }\r\n    } catch (error) {\r\n      // Token is invalid, clear auth state\r\n      logout();\r\n    }\r\n  };\r\n\r\n  const login = async (credentials) => {\r\n    try {\r\n      const endpoint = credentials.email ? '/api/auth/signup' : '/api/auth/signin';\r\n      const response = await axios.post(`${url}${endpoint}`, credentials, {\r\n        withCredentials: true,\r\n      });\r\n\r\n      const userData = response.data.user;\r\n      setUser(userData);\r\n      setIsAuthenticated(true);\r\n      localStorage.setItem('user', JSON.stringify(userData));\r\n      \r\n      return { success: true, user: userData };\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      return { \r\n        success: false, \r\n        error: error.response?.data?.message || 'Authentication failed' \r\n      };\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n    setIsAuthenticated(false);\r\n    localStorage.removeItem('user');\r\n    // Optionally call backend logout endpoint\r\n    logoutFromBackend();\r\n  };\r\n\r\n  const logoutFromBackend = async () => {\r\n    try {\r\n      await axios.post(`${url}/api/auth/logout`, {}, {\r\n        withCredentials: true,\r\n      });\r\n    } catch (error) {\r\n      console.error('Backend logout error:', error);\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    isAuthenticated,\r\n    loading,\r\n    login,\r\n    logout,\r\n    checkAuthStatus\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}