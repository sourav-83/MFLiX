{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\ss\\\\src\\\\pages\\\\CategoryMovies.jsx\",\n  _s = $RefreshSig$();\nimport Header from '../components/common/Header';\nimport { categoryMovies } from '../services/api';\nimport { Box, styled, Typography } from '@mui/material';\nimport { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { POPULAR_API_URL, UPCOMING_API_URL, TOPRATED_API_URL, moviesType } from '../constants/constant';\nimport Carousel from 'react-multi-carousel';\nimport 'react-multi-carousel/lib/styles.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst responsive = {\n  desktop: {\n    breakpoint: {\n      max: 3000,\n      min: 1024\n    },\n    items: 1,\n    slidesToSlide: 1\n  },\n  tablet: {\n    breakpoint: {\n      max: 1024,\n      min: 464\n    },\n    items: 1,\n    slidesToSlide: 1\n  },\n  mobile: {\n    breakpoint: {\n      max: 464,\n      min: 0\n    },\n    items: 1,\n    slidesToSlide: 1\n  }\n};\nconst StyledBanner = styled('img')({\n  height: 450,\n  width: '100%',\n  objectFit: 'cover'\n});\n_c = StyledBanner;\nconst Component = styled(Box)`\n   width: 80%;\n   margin: auto;\n`;\n_c2 = Component;\nconst CategoryMovies = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const {\n    search\n  } = useLocation();\n  useEffect(() => {\n    const getData = async API_URL => {\n      const response = await categoryMovies(API_URL);\n      setMovies(response.results || []);\n    };\n    let API_URL;\n    if (search.includes('popular')) {\n      API_URL = POPULAR_API_URL;\n    } else if (search.includes('upcoming')) {\n      API_URL = UPCOMING_API_URL;\n    } else if (search.includes('toprated')) {\n      API_URL = TOPRATED_API_URL;\n    }\n    getData(API_URL);\n  }, [search]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Component, {\n      children: [/*#__PURE__*/_jsxDEV(Carousel, {\n        responsive: responsive,\n        swipeable: false,\n        draggable: false,\n        showDots: false,\n        infinite: true,\n        autoPlay: true,\n        autoPlaySpeed: 3000,\n        keyBoardControl: true,\n        slidesToSlide: 1,\n        children: movies.map(movie => /*#__PURE__*/_jsxDEV(Box, {\n          children: /*#__PURE__*/_jsxDEV(StyledBanner, {\n            src: `https://image.tmdb.org/t/p/original/${movie.backdrop_path}`,\n            alt: movie.original_title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 29\n          }, this)\n        }, movie.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          children: \"IMDb Charts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"IMDb \", moviesType[search.split('=')[1]], \" Movies\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"IIMDb top \", movies, \" as rated by regular IMDb voters.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(CategoryMovies, \"6jIPy4U2d4FTT1aj/LpOD1DNy/Q=\", false, function () {\n  return [useLocation];\n});\n_c3 = CategoryMovies;\nexport default CategoryMovies;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"StyledBanner\");\n$RefreshReg$(_c2, \"Component\");\n$RefreshReg$(_c3, \"CategoryMovies\");","map":{"version":3,"names":["Header","categoryMovies","Box","styled","Typography","useState","useEffect","useLocation","POPULAR_API_URL","UPCOMING_API_URL","TOPRATED_API_URL","moviesType","Carousel","jsxDEV","_jsxDEV","Fragment","_Fragment","responsive","desktop","breakpoint","max","min","items","slidesToSlide","tablet","mobile","StyledBanner","height","width","objectFit","_c","Component","_c2","CategoryMovies","_s","movies","setMovies","search","getData","API_URL","response","results","includes","children","fileName","_jsxFileName","lineNumber","columnNumber","swipeable","draggable","showDots","infinite","autoPlay","autoPlaySpeed","keyBoardControl","map","movie","src","backdrop_path","alt","original_title","id","split","_c3","$RefreshReg$"],"sources":["D:/react/ss/src/pages/CategoryMovies.jsx"],"sourcesContent":["import Header from '../components/common/Header';\r\nimport { categoryMovies } from '../services/api';\r\n\r\nimport { Box, styled, Typography } from '@mui/material';\r\nimport { useState, useEffect } from 'react';\r\n\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport { POPULAR_API_URL, UPCOMING_API_URL, TOPRATED_API_URL, moviesType } from '../constants/constant';\r\n\r\nimport Carousel from 'react-multi-carousel';\r\nimport 'react-multi-carousel/lib/styles.css';\r\n\r\nconst responsive = {\r\n    desktop: {\r\n        breakpoint: { max: 3000, min: 1024 },\r\n        items: 1,\r\n        slidesToSlide: 1\r\n    },\r\n    tablet: {\r\n        breakpoint: { max: 1024, min: 464 },\r\n        items: 1,\r\n        slidesToSlide: 1\r\n    },\r\n    mobile: {\r\n        breakpoint: { max: 464, min: 0 },\r\n        items: 1,\r\n        slidesToSlide: 1\r\n    }\r\n};\r\n\r\nconst StyledBanner = styled('img')({\r\n    height: 450,\r\n    width: '100%',\r\n    objectFit: 'cover'\r\n});\r\n\r\n\r\nconst Component = styled(Box)`\r\n   width: 80%;\r\n   margin: auto;\r\n`\r\n\r\n\r\n\r\n\r\nconst CategoryMovies = () => {\r\n    const [movies, setMovies] = useState([]);\r\n\r\n    const { search } = useLocation();\r\n\r\n    useEffect(() => {\r\n        const getData = async (API_URL) => {\r\n            const response = await categoryMovies(API_URL);\r\n            setMovies(response.results || []);\r\n\r\n        };\r\n\r\n        let API_URL; \r\n\r\n        if (search.includes('popular'))\r\n        {\r\n           API_URL = POPULAR_API_URL;\r\n        }\r\n        else if (search.includes('upcoming'))\r\n        {\r\n           API_URL = UPCOMING_API_URL;\r\n        }\r\n        else if (search.includes('toprated'))\r\n        {\r\n          API_URL = TOPRATED_API_URL;\r\n        }\r\n        getData(API_URL);\r\n    }, [search]); \r\n\r\n    return (\r\n        <>\r\n            <Header />\r\n            <Component>\r\n                <Carousel\r\n                    responsive={responsive}\r\n                    swipeable={false}\r\n                    draggable={false}\r\n                    showDots={false}\r\n                    infinite={true}\r\n                    autoPlay={true}\r\n                    autoPlaySpeed={3000}\r\n                    keyBoardControl={true}\r\n                    slidesToSlide={1}\r\n                >\r\n                    {movies.map(movie => (\r\n                        <Box key={movie.id}>\r\n                            <StyledBanner\r\n                                src={`https://image.tmdb.org/t/p/original/${movie.backdrop_path}`}\r\n                                alt={movie.original_title}\r\n                            />\r\n                        </Box>\r\n                    ))}\r\n                </Carousel>\r\n                <Box>\r\n                    <Typography>\r\n                        IMDb Charts\r\n                    </Typography>\r\n                    <Typography>IMDb {moviesType[search.split('=')[1]]} Movies</Typography>\r\n                    <Typography>\r\n                        IIMDb top {movies} as rated by regular IMDb voters.\r\n                    </Typography>\r\n                </Box>\r\n            </Component>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CategoryMovies;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}