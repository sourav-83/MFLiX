{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\ss\\\\src\\\\pages\\\\CategoryMovies.jsx\",\n  _s = $RefreshSig$();\nimport Header from '../components/common/Header';\nimport { categoryMovies } from '../services/api';\nimport { Box, styled } from '@mui/material';\nimport { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport Carousel from 'react-multi-carousel';\nimport 'react-multi-carousel/lib/styles.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst responsive = {\n  desktop: {\n    breakpoint: {\n      max: 3000,\n      min: 1024\n    },\n    items: 1,\n    slidesToSlide: 1\n  },\n  tablet: {\n    breakpoint: {\n      max: 1024,\n      min: 464\n    },\n    items: 1,\n    slidesToSlide: 1\n  },\n  mobile: {\n    breakpoint: {\n      max: 464,\n      min: 0\n    },\n    items: 1,\n    slidesToSlide: 1\n  }\n};\nconst StyledBanner = styled('img')({\n  height: 450,\n  width: '100%',\n  objectFit: 'cover'\n});\n_c = StyledBanner;\nconst CategoryMovies = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const {\n    search\n  } = useLocation();\n  useEffect(() => {\n    const getData = async () => {\n      const response = await categoryMovies();\n      setMovies(response.results || []);\n    };\n    getData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(Carousel, {\n        responsive: responsive,\n        swipeable: false,\n        draggable: false,\n        showDots: false,\n        infinite: true,\n        autoPlay: true,\n        autoPlaySpeed: 3000,\n        keyBoardControl: true,\n        slidesToSlide: 1,\n        children: movies.map(movie => /*#__PURE__*/_jsxDEV(Box, {\n          children: /*#__PURE__*/_jsxDEV(StyledBanner, {\n            src: `https://image.tmdb.org/t/p/original/${movie.backdrop_path}`,\n            alt: movie.original_title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this)\n        }, movie.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(CategoryMovies, \"6jIPy4U2d4FTT1aj/LpOD1DNy/Q=\", false, function () {\n  return [useLocation];\n});\n_c2 = CategoryMovies;\nexport default CategoryMovies;\nvar _c, _c2;\n$RefreshReg$(_c, \"StyledBanner\");\n$RefreshReg$(_c2, \"CategoryMovies\");","map":{"version":3,"names":["Header","categoryMovies","Box","styled","useState","useEffect","useLocation","Carousel","jsxDEV","_jsxDEV","Fragment","_Fragment","responsive","desktop","breakpoint","max","min","items","slidesToSlide","tablet","mobile","StyledBanner","height","width","objectFit","_c","CategoryMovies","_s","movies","setMovies","search","getData","response","results","children","fileName","_jsxFileName","lineNumber","columnNumber","swipeable","draggable","showDots","infinite","autoPlay","autoPlaySpeed","keyBoardControl","map","movie","src","backdrop_path","alt","original_title","id","_c2","$RefreshReg$"],"sources":["D:/react/ss/src/pages/CategoryMovies.jsx"],"sourcesContent":["import Header from '../components/common/Header';\r\nimport { categoryMovies } from '../services/api';\r\n\r\nimport { Box, styled } from '@mui/material';\r\nimport { useState, useEffect } from 'react';\r\n\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport Carousel from 'react-multi-carousel';\r\nimport 'react-multi-carousel/lib/styles.css';\r\n\r\nconst responsive = {\r\n    desktop: {\r\n        breakpoint: { max: 3000, min: 1024 },\r\n        items: 1,\r\n        slidesToSlide: 1\r\n    },\r\n    tablet: {\r\n        breakpoint: { max: 1024, min: 464 },\r\n        items: 1,\r\n        slidesToSlide: 1\r\n    },\r\n    mobile: {\r\n        breakpoint: { max: 464, min: 0 },\r\n        items: 1,\r\n        slidesToSlide: 1\r\n    }\r\n};\r\n\r\nconst StyledBanner = styled('img')({\r\n    height: 450,\r\n    width: '100%',\r\n    objectFit: 'cover'\r\n});\r\n\r\nconst CategoryMovies = () => {\r\n    const [movies, setMovies] = useState([]);\r\n\r\n    const { search } = useLocation();\r\n\r\n    useEffect(() => {\r\n        const getData = async () => {\r\n            const response = await categoryMovies();\r\n            setMovies(response.results || []);\r\n            \r\n        };\r\n        getData();\r\n    }, []); \r\n\r\n    return (\r\n        <>\r\n            <Header />\r\n            <Box>\r\n                <Carousel\r\n                    responsive={responsive}\r\n                    swipeable={false}\r\n                    draggable={false}\r\n                    showDots={false}\r\n                    infinite={true}\r\n                    autoPlay={true}\r\n                    autoPlaySpeed={3000}\r\n                    keyBoardControl={true}\r\n                    slidesToSlide={1}\r\n                >\r\n                    {movies.map(movie => (\r\n                        <Box key={movie.id}>\r\n                            <StyledBanner\r\n                                src={`https://image.tmdb.org/t/p/original/${movie.backdrop_path}`}\r\n                                alt={movie.original_title}\r\n                            />\r\n                        </Box>\r\n                    ))}\r\n                </Carousel>\r\n            </Box>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CategoryMovies;\r\n"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,6BAA6B;AAChD,SAASC,cAAc,QAAQ,iBAAiB;AAEhD,SAASC,GAAG,EAAEC,MAAM,QAAQ,eAAe;AAC3C,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,OAAO,qCAAqC;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE7C,MAAMC,UAAU,GAAG;EACfC,OAAO,EAAE;IACLC,UAAU,EAAE;MAAEC,GAAG,EAAE,IAAI;MAAEC,GAAG,EAAE;IAAK,CAAC;IACpCC,KAAK,EAAE,CAAC;IACRC,aAAa,EAAE;EACnB,CAAC;EACDC,MAAM,EAAE;IACJL,UAAU,EAAE;MAAEC,GAAG,EAAE,IAAI;MAAEC,GAAG,EAAE;IAAI,CAAC;IACnCC,KAAK,EAAE,CAAC;IACRC,aAAa,EAAE;EACnB,CAAC;EACDE,MAAM,EAAE;IACJN,UAAU,EAAE;MAAEC,GAAG,EAAE,GAAG;MAAEC,GAAG,EAAE;IAAE,CAAC;IAChCC,KAAK,EAAE,CAAC;IACRC,aAAa,EAAE;EACnB;AACJ,CAAC;AAED,MAAMG,YAAY,GAAGlB,MAAM,CAAC,KAAK,CAAC,CAAC;EAC/BmB,MAAM,EAAE,GAAG;EACXC,KAAK,EAAE,MAAM;EACbC,SAAS,EAAE;AACf,CAAC,CAAC;AAACC,EAAA,GAJGJ,YAAY;AAMlB,MAAMK,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAM;IAAE0B;EAAO,CAAC,GAAGxB,WAAW,CAAC,CAAC;EAEhCD,SAAS,CAAC,MAAM;IACZ,MAAM0B,OAAO,GAAG,MAAAA,CAAA,KAAY;MACxB,MAAMC,QAAQ,GAAG,MAAM/B,cAAc,CAAC,CAAC;MACvC4B,SAAS,CAACG,QAAQ,CAACC,OAAO,IAAI,EAAE,CAAC;IAErC,CAAC;IACDF,OAAO,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACItB,OAAA,CAAAE,SAAA;IAAAuB,QAAA,gBACIzB,OAAA,CAACT,MAAM;MAAAmC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACV7B,OAAA,CAACP,GAAG;MAAAgC,QAAA,eACAzB,OAAA,CAACF,QAAQ;QACLK,UAAU,EAAEA,UAAW;QACvB2B,SAAS,EAAE,KAAM;QACjBC,SAAS,EAAE,KAAM;QACjBC,QAAQ,EAAE,KAAM;QAChBC,QAAQ,EAAE,IAAK;QACfC,QAAQ,EAAE,IAAK;QACfC,aAAa,EAAE,IAAK;QACpBC,eAAe,EAAE,IAAK;QACtB3B,aAAa,EAAE,CAAE;QAAAgB,QAAA,EAEhBN,MAAM,CAACkB,GAAG,CAACC,KAAK,iBACbtC,OAAA,CAACP,GAAG;UAAAgC,QAAA,eACAzB,OAAA,CAACY,YAAY;YACT2B,GAAG,EAAE,uCAAuCD,KAAK,CAACE,aAAa,EAAG;YAClEC,GAAG,EAAEH,KAAK,CAACI;UAAe;YAAAhB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7B;QAAC,GAJIS,KAAK,CAACK,EAAE;UAAAjB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKb,CACR;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC;EAAA,eACR,CAAC;AAEX,CAAC;AAACX,EAAA,CAzCID,cAAc;EAAA,QAGGpB,WAAW;AAAA;AAAA+C,GAAA,GAH5B3B,cAAc;AA2CpB,eAAeA,cAAc;AAAC,IAAAD,EAAA,EAAA4B,GAAA;AAAAC,YAAA,CAAA7B,EAAA;AAAA6B,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}