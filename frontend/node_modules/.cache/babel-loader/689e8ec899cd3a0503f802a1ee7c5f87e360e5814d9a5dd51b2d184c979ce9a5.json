{"ast":null,"code":"var _jsxFileName = \"D:\\\\react movie website\\\\frontend\\\\src\\\\components\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport url from '../../constants/url';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  // Set up axios interceptor to include token in ALL requests\n  useEffect(() => {\n    const interceptor = axios.interceptors.request.use(config => {\n      const token = localStorage.getItem('token');\n      if (token) {\n        config.headers.Authorization = `Bearer ${token}`;\n      }\n      return config;\n    }, error => {\n      return Promise.reject(error);\n    });\n\n    // Cleanup interceptor on unmount\n    return () => {\n      axios.interceptors.request.eject(interceptor);\n    };\n  }, []);\n  useEffect(() => {\n    checkAuthStatus();\n  }, []);\n  const checkAuthStatus = async () => {\n    try {\n      const storedUser = localStorage.getItem('user');\n      const storedToken = localStorage.getItem('token');\n      if (storedUser && storedToken) {\n        const userData = JSON.parse(storedUser);\n        setUser(userData);\n        setIsAuthenticated(true);\n\n        // Optionally verify token is still valid\n        await verifyTokenWithBackend(userData);\n      }\n    } catch (error) {\n      console.error('Auth check error:', error);\n      logout();\n    } finally {\n      setLoading(false);\n    }\n  };\n  const verifyTokenWithBackend = async (existingUserData = null) => {\n    try {\n      const response = await axios.get(`${url}/api/auth/verify`);\n      if (response.data.user) {\n        // Merge existing user data with new data to preserve all fields\n        const updatedUser = existingUserData ? {\n          ...existingUserData,\n          ...response.data.user\n        } : response.data.user;\n        setUser(updatedUser);\n        setIsAuthenticated(true);\n        localStorage.setItem('user', JSON.stringify(updatedUser));\n      }\n    } catch (error) {\n      console.error('Token verification failed:', error);\n      logout();\n    }\n  };\n  const login = async credentials => {\n    try {\n      const endpoint = credentials.email ? '/api/auth/signup' : '/api/auth/signin';\n      const response = await axios.post(`${url}${endpoint}`, credentials);\n      const userData = response.data.user;\n      const token = response.data.token;\n\n      // Store user and token\n      setUser(userData);\n      setIsAuthenticated(true);\n      localStorage.setItem('user', JSON.stringify(userData));\n      localStorage.setItem('token', token);\n      return {\n        success: true,\n        user: userData\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Login error:', error);\n      return {\n        success: false,\n        error: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Authentication failed'\n      };\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    setIsAuthenticated(false);\n    localStorage.removeItem('user');\n    localStorage.removeItem('token');\n\n    // Optional: call backend logout (though not needed for token-based auth)\n    logoutFromBackend();\n  };\n  const logoutFromBackend = async () => {\n    try {\n      await axios.post(`${url}/api/auth/logout`);\n    } catch (error) {\n      console.error('Backend logout error:', error);\n    }\n  };\n  const value = {\n    user,\n    isAuthenticated,\n    loading,\n    login,\n    logout,\n    checkAuthStatus\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"IZja/rYxMfdrDJzYcGoGecx9cBo=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","url","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","isAuthenticated","setIsAuthenticated","interceptor","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","error","Promise","reject","eject","checkAuthStatus","storedUser","storedToken","userData","JSON","parse","verifyTokenWithBackend","console","logout","existingUserData","response","get","data","updatedUser","setItem","stringify","login","credentials","endpoint","email","post","success","_error$response","_error$response$data","message","removeItem","logoutFromBackend","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/react movie website/frontend/src/components/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport url from '../../constants/url';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n  // Set up axios interceptor to include token in ALL requests\r\n  useEffect(() => {\r\n    const interceptor = axios.interceptors.request.use(\r\n      (config) => {\r\n        const token = localStorage.getItem('token');\r\n        if (token) {\r\n          config.headers.Authorization = `Bearer ${token}`;\r\n        }\r\n        return config;\r\n      },\r\n      (error) => {\r\n        return Promise.reject(error);\r\n      }\r\n    );\r\n\r\n    // Cleanup interceptor on unmount\r\n    return () => {\r\n      axios.interceptors.request.eject(interceptor);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    checkAuthStatus();\r\n  }, []);\r\n\r\n  const checkAuthStatus = async () => {\r\n    try {\r\n      const storedUser = localStorage.getItem('user');\r\n      const storedToken = localStorage.getItem('token');\r\n      \r\n      if (storedUser && storedToken) {\r\n        const userData = JSON.parse(storedUser);\r\n        setUser(userData);\r\n        setIsAuthenticated(true);\r\n        \r\n        // Optionally verify token is still valid\r\n        await verifyTokenWithBackend(userData);\r\n      }\r\n    } catch (error) {\r\n      console.error('Auth check error:', error);\r\n      logout();\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const verifyTokenWithBackend = async (existingUserData = null) => {\r\n    try {\r\n      const response = await axios.get(`${url}/api/auth/verify`);\r\n      \r\n      if (response.data.user) {\r\n        // Merge existing user data with new data to preserve all fields\r\n        const updatedUser = existingUserData \r\n          ? { ...existingUserData, ...response.data.user }\r\n          : response.data.user;\r\n          \r\n        setUser(updatedUser);\r\n        setIsAuthenticated(true);\r\n        localStorage.setItem('user', JSON.stringify(updatedUser));\r\n      }\r\n    } catch (error) {\r\n      console.error('Token verification failed:', error);\r\n      logout();\r\n    }\r\n  };\r\n\r\n  const login = async (credentials) => {\r\n    try {\r\n      const endpoint = credentials.email ? '/api/auth/signup' : '/api/auth/signin';\r\n      const response = await axios.post(`${url}${endpoint}`, credentials);\r\n\r\n      const userData = response.data.user;\r\n      const token = response.data.token;\r\n      \r\n      // Store user and token\r\n      setUser(userData);\r\n      setIsAuthenticated(true);\r\n      localStorage.setItem('user', JSON.stringify(userData));\r\n      localStorage.setItem('token', token);\r\n      \r\n      return { success: true, user: userData };\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      return { \r\n        success: false, \r\n        error: error.response?.data?.message || 'Authentication failed' \r\n      };\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n    setIsAuthenticated(false);\r\n    localStorage.removeItem('user');\r\n    localStorage.removeItem('token');\r\n    \r\n    // Optional: call backend logout (though not needed for token-based auth)\r\n    logoutFromBackend();\r\n  };\r\n\r\n  const logoutFromBackend = async () => {\r\n    try {\r\n      await axios.post(`${url}/api/auth/logout`);\r\n    } catch (error) {\r\n      console.error('Backend logout error:', error);\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    isAuthenticated,\r\n    loading,\r\n    login,\r\n    logout,\r\n    checkAuthStatus\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}