{"ast":null,"code":"var _jsxFileName = \"D:\\\\react movie website\\\\frontend\\\\src\\\\pages\\\\MovieDetails.jsx\",\n  _s = $RefreshSig$();\n// MovieDetails.jsx\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useParams } from \"react-router-dom\";\nimport { Container, styled } from \"@mui/material\";\nimport { BookmarkAdd, BookmarkAdded } from \"@mui/icons-material\";\nimport url from \"../constants/url\";\n\n// Import reusable components\nimport HeroSection from \"../components/movie details/HeroSection\";\nimport SynopsisSection from \"../components/movie details/SynopsisSection\";\nimport AwardsSection from \"../components/movie details/AwardsSection\";\nimport CastSection from \"../components/movie details/CastSection\";\nimport CrewSection from \"../components/movie details/CrewSection\";\nimport StudiosSection from \"../components/movie details/StudiosSection\";\nimport ReviewsSection from \"../components/movie details/ReviewsSection\";\nimport TrailerDialog from \"../components/movie details/TrailerDialog\";\nimport NotificationSnackbar from \"../components/movie details/NotificationSnackbar\";\nimport { LoadingState, ErrorState, NotFoundState } from \"../components/movie details/LoadingErrorStates\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledContainer = styled(Container)`\n  padding: 0;\n  max-width: none !important;\n`;\n_c = StyledContainer;\nfunction MovieDetails() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [trailerOpen, setTrailerOpen] = useState(false);\n  const [selectedTrailer, setSelectedTrailer] = useState(null);\n  const [isInWatchlist, setIsInWatchlist] = useState(false);\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState('');\n  const [watchlistLoading, setWatchlistLoading] = useState(false);\n  const [watchlistChecked, setWatchlistChecked] = useState(false);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  // Check authentication status\n  const checkAuthStatus = () => {\n    const token = localStorage.getItem('token');\n    setIsAuthenticated(!!token);\n    return !!token;\n  };\n\n  // Fetch movie details\n  const fetchMovieDetails = async movieId => {\n    try {\n      const response = await axios.get(`${url}/api/movies/${movieId}`);\n      setMovie(response.data);\n      setError(null);\n    } catch (error) {\n      console.error(\"Error fetching movie details:\", error);\n      setError(\"Movie not found\");\n      throw error;\n    }\n  };\n\n  // Check if movie is in watchlist\n  const checkWatchlistStatus = async movieId => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        setIsInWatchlist(false);\n        setWatchlistChecked(true);\n        return;\n      }\n      setWatchlistLoading(true);\n      const response = await axios.get(`${url}/api/watchlist/check/${movieId}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setIsInWatchlist(response.data.inWatchlist);\n      setWatchlistChecked(true);\n    } catch (error) {\n      var _error$response;\n      console.error(\"Error checking watchlist status:\", error);\n      // If token is invalid, clear it\n      if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n        setIsAuthenticated(false);\n      }\n      setIsInWatchlist(false);\n      setWatchlistChecked(true);\n    } finally {\n      setWatchlistLoading(false);\n    }\n  };\n\n  // Initialize component\n  useEffect(() => {\n    const initializeComponent = async () => {\n      if (!id) return;\n      setLoading(true);\n      setWatchlistChecked(false);\n\n      // Check authentication status\n      const authenticated = checkAuthStatus();\n      try {\n        // Fetch movie details\n        await fetchMovieDetails(id);\n\n        // Check watchlist status if authenticated\n        if (authenticated) {\n          await checkWatchlistStatus(id);\n        } else {\n          setWatchlistChecked(true);\n          setIsInWatchlist(false);\n        }\n      } catch (error) {\n        console.error(\"Error initializing component:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    initializeComponent();\n  }, [id]);\n\n  // Listen for authentication changes (including login/logout in other tabs)\n  useEffect(() => {\n    const handleAuthChange = () => {\n      const wasAuthenticated = isAuthenticated;\n      const nowAuthenticated = checkAuthStatus();\n      if (nowAuthenticated !== wasAuthenticated) {\n        if (nowAuthenticated && id) {\n          // User just logged in, check watchlist status\n          checkWatchlistStatus(id);\n        } else if (!nowAuthenticated) {\n          // User just logged out, reset watchlist status\n          setIsInWatchlist(false);\n          setWatchlistChecked(true);\n        }\n      }\n    };\n\n    // Listen for storage changes (login/logout in another tab)\n    window.addEventListener('storage', handleAuthChange);\n\n    // Also listen for focus events to catch auth changes\n    window.addEventListener('focus', handleAuthChange);\n    return () => {\n      window.removeEventListener('storage', handleAuthChange);\n      window.removeEventListener('focus', handleAuthChange);\n    };\n  }, [id, isAuthenticated]);\n\n  // Handle watchlist toggle\n  const handleWatchlistToggle = async () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      setSnackbarMessage('Please log in to manage your watchlist');\n      setSnackbarOpen(true);\n      return;\n    }\n    setWatchlistLoading(true);\n    try {\n      if (isInWatchlist) {\n        // Remove from watchlist\n        await axios.delete(`${url}/api/watchlist/remove`, {\n          data: {\n            movieid: parseInt(id)\n          },\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        setIsInWatchlist(false);\n        setSnackbarMessage('Movie removed from watchlist');\n      } else {\n        // Add to watchlist\n        await axios.post(`${url}/api/watchlist/add`, {\n          movieid: parseInt(id)\n        }, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        setIsInWatchlist(true);\n        setSnackbarMessage('Movie added to watchlist');\n      }\n      setSnackbarOpen(true);\n    } catch (error) {\n      var _error$response2, _error$response3, _error$response4;\n      console.error(\"Error updating watchlist:\", error);\n      let errorMessage = 'Failed to update watchlist';\n      if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 400) {\n        errorMessage = 'Movie is already in watchlist';\n      } else if (((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status) === 401) {\n        errorMessage = 'Please log in to manage your watchlist';\n        // Clear token if unauthorized\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n        setIsInWatchlist(false);\n        setIsAuthenticated(false);\n      } else if (((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.status) === 404) {\n        errorMessage = isInWatchlist ? 'Movie not found in watchlist' : 'Watchlist not found';\n      }\n      setSnackbarMessage(errorMessage);\n      setSnackbarOpen(true);\n    } finally {\n      setWatchlistLoading(false);\n    }\n  };\n  const handleTrailerPlay = trailer => {\n    setSelectedTrailer(trailer);\n    setTrailerOpen(true);\n  };\n  const formatDate = dateString => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    });\n  };\n  const formatDuration = minutes => {\n    const hours = Math.floor(minutes / 60);\n    const mins = minutes % 60;\n    return hours > 0 ? `${hours}h ${mins}m` : `${mins}m`;\n  };\n\n  // Get watchlist button props - Enhanced with better status detection\n  const getWatchlistButtonProps = () => {\n    // If not authenticated, show login prompt\n    if (!isAuthenticated) {\n      return {\n        startIcon: /*#__PURE__*/_jsxDEV(BookmarkAdd, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 20\n        }, this),\n        className: '',\n        text: 'Login to Add to Watchlist',\n        disabled: false\n      };\n    }\n\n    // If watchlist status is being checked or updated\n    if (watchlistLoading || !watchlistChecked) {\n      return {\n        startIcon: /*#__PURE__*/_jsxDEV(BookmarkAdd, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 20\n        }, this),\n        className: '',\n        text: 'Loading...',\n        disabled: true\n      };\n    }\n\n    // If movie is in watchlist\n    if (isInWatchlist) {\n      return {\n        startIcon: /*#__PURE__*/_jsxDEV(BookmarkAdded, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 20\n        }, this),\n        className: 'added',\n        text: 'In Watchlist âœ“',\n        disabled: false\n      };\n    }\n\n    // Default state - not in watchlist\n    return {\n      startIcon: /*#__PURE__*/_jsxDEV(BookmarkAdd, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 18\n      }, this),\n      className: '',\n      text: 'Add to Watchlist',\n      disabled: false\n    };\n  };\n\n  // Loading and error states\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(LoadingState, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(ErrorState, {\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 12\n    }, this);\n  }\n  if (!movie) {\n    return /*#__PURE__*/_jsxDEV(NotFoundState, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 12\n    }, this);\n  }\n  const watchlistButtonProps = getWatchlistButtonProps();\n  return /*#__PURE__*/_jsxDEV(StyledContainer, {\n    children: [/*#__PURE__*/_jsxDEV(HeroSection, {\n      movie: movie,\n      onTrailerPlay: handleTrailerPlay,\n      onWatchlistToggle: handleWatchlistToggle,\n      watchlistButtonProps: watchlistButtonProps,\n      formatDate: formatDate,\n      formatDuration: formatDuration\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SynopsisSection, {\n      synopsis: movie.synopsis\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        backgroundColor: '#121212',\n        minHeight: '100vh',\n        py: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"xl\",\n        children: [/*#__PURE__*/_jsxDEV(AwardsSection, {\n          awards: movie.awards\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CastSection, {\n          cast: movie.cast,\n          formatDate: formatDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CrewSection, {\n          directors: movie.directors,\n          writers: movie.writers,\n          formatDate: formatDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StudiosSection, {\n          studios: movie.studios\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ReviewsSection, {\n          reviews: movie.reviews,\n          formatDate: formatDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TrailerDialog, {\n      open: trailerOpen,\n      onClose: () => setTrailerOpen(false),\n      selectedTrailer: selectedTrailer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NotificationSnackbar, {\n      open: snackbarOpen,\n      message: snackbarMessage,\n      onClose: () => setSnackbarOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 295,\n    columnNumber: 5\n  }, this);\n}\n_s(MovieDetails, \"s6/l5CEVC8TkDtNvUJs6UA3m4sI=\", false, function () {\n  return [useParams];\n});\n_c2 = MovieDetails;\nexport default MovieDetails;\nvar _c, _c2;\n$RefreshReg$(_c, \"StyledContainer\");\n$RefreshReg$(_c2, \"MovieDetails\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","Container","styled","BookmarkAdd","BookmarkAdded","url","HeroSection","SynopsisSection","AwardsSection","CastSection","CrewSection","StudiosSection","ReviewsSection","TrailerDialog","NotificationSnackbar","LoadingState","ErrorState","NotFoundState","jsxDEV","_jsxDEV","StyledContainer","_c","MovieDetails","_s","id","movie","setMovie","loading","setLoading","error","setError","trailerOpen","setTrailerOpen","selectedTrailer","setSelectedTrailer","isInWatchlist","setIsInWatchlist","snackbarOpen","setSnackbarOpen","snackbarMessage","setSnackbarMessage","watchlistLoading","setWatchlistLoading","watchlistChecked","setWatchlistChecked","isAuthenticated","setIsAuthenticated","checkAuthStatus","token","localStorage","getItem","fetchMovieDetails","movieId","response","get","data","console","checkWatchlistStatus","headers","inWatchlist","_error$response","status","removeItem","initializeComponent","authenticated","handleAuthChange","wasAuthenticated","nowAuthenticated","window","addEventListener","removeEventListener","handleWatchlistToggle","delete","movieid","parseInt","post","_error$response2","_error$response3","_error$response4","errorMessage","handleTrailerPlay","trailer","formatDate","dateString","Date","toLocaleDateString","year","month","day","formatDuration","minutes","hours","Math","floor","mins","getWatchlistButtonProps","startIcon","fileName","_jsxFileName","lineNumber","columnNumber","className","text","disabled","watchlistButtonProps","children","onTrailerPlay","onWatchlistToggle","synopsis","Box","sx","backgroundColor","minHeight","py","maxWidth","awards","cast","directors","writers","studios","reviews","open","onClose","message","_c2","$RefreshReg$"],"sources":["D:/react movie website/frontend/src/pages/MovieDetails.jsx"],"sourcesContent":["// MovieDetails.jsx\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Container, styled } from \"@mui/material\";\r\nimport { BookmarkAdd, BookmarkAdded } from \"@mui/icons-material\";\r\nimport url from \"../constants/url\";\r\n\r\n\r\n// Import reusable components\r\nimport HeroSection from \"../components/movie details/HeroSection\";\r\nimport SynopsisSection from \"../components/movie details/SynopsisSection\";\r\nimport AwardsSection from \"../components/movie details/AwardsSection\";\r\nimport CastSection from \"../components/movie details/CastSection\";\r\nimport CrewSection from \"../components/movie details/CrewSection\";\r\nimport StudiosSection from \"../components/movie details/StudiosSection\";\r\nimport ReviewsSection from \"../components/movie details/ReviewsSection\";\r\nimport TrailerDialog from \"../components/movie details/TrailerDialog\";\r\nimport NotificationSnackbar from \"../components/movie details/NotificationSnackbar\";\r\nimport { LoadingState, ErrorState, NotFoundState } from \"../components/movie details/LoadingErrorStates\";\r\n\r\nconst StyledContainer = styled(Container)`\r\n  padding: 0;\r\n  max-width: none !important;\r\n`;\r\n\r\nfunction MovieDetails() {\r\n  const { id } = useParams();\r\n  const [movie, setMovie] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [trailerOpen, setTrailerOpen] = useState(false);\r\n  const [selectedTrailer, setSelectedTrailer] = useState(null);\r\n  const [isInWatchlist, setIsInWatchlist] = useState(false);\r\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\r\n  const [snackbarMessage, setSnackbarMessage] = useState('');\r\n  const [watchlistLoading, setWatchlistLoading] = useState(false);\r\n  const [watchlistChecked, setWatchlistChecked] = useState(false);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n  // Check authentication status\r\n  const checkAuthStatus = () => {\r\n    const token = localStorage.getItem('token');\r\n    setIsAuthenticated(!!token);\r\n    return !!token;\r\n  };\r\n\r\n  // Fetch movie details\r\n  const fetchMovieDetails = async (movieId) => {\r\n    try {\r\n      const response = await axios.get(`${url}/api/movies/${movieId}`);\r\n      setMovie(response.data);\r\n      setError(null);\r\n    } catch (error) {\r\n      console.error(\"Error fetching movie details:\", error);\r\n      setError(\"Movie not found\");\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Check if movie is in watchlist\r\n  const checkWatchlistStatus = async (movieId) => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        setIsInWatchlist(false);\r\n        setWatchlistChecked(true);\r\n        return;\r\n      }\r\n\r\n      setWatchlistLoading(true);\r\n      const response = await axios.get(`${url}/api/watchlist/check/${movieId}`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n      \r\n      setIsInWatchlist(response.data.inWatchlist);\r\n      setWatchlistChecked(true);\r\n    } catch (error) {\r\n      console.error(\"Error checking watchlist status:\", error);\r\n      // If token is invalid, clear it\r\n      if (error.response?.status === 401) {\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('user');\r\n        setIsAuthenticated(false);\r\n      }\r\n      setIsInWatchlist(false);\r\n      setWatchlistChecked(true);\r\n    } finally {\r\n      setWatchlistLoading(false);\r\n    }\r\n  };\r\n\r\n  // Initialize component\r\n  useEffect(() => {\r\n    const initializeComponent = async () => {\r\n      if (!id) return;\r\n      \r\n      setLoading(true);\r\n      setWatchlistChecked(false);\r\n      \r\n      // Check authentication status\r\n      const authenticated = checkAuthStatus();\r\n      \r\n      try {\r\n        // Fetch movie details\r\n        await fetchMovieDetails(id);\r\n        \r\n        // Check watchlist status if authenticated\r\n        if (authenticated) {\r\n          await checkWatchlistStatus(id);\r\n        } else {\r\n          setWatchlistChecked(true);\r\n          setIsInWatchlist(false);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error initializing component:\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    initializeComponent();\r\n  }, [id]);\r\n\r\n  // Listen for authentication changes (including login/logout in other tabs)\r\n  useEffect(() => {\r\n    const handleAuthChange = () => {\r\n      const wasAuthenticated = isAuthenticated;\r\n      const nowAuthenticated = checkAuthStatus();\r\n      \r\n      if (nowAuthenticated !== wasAuthenticated) {\r\n        if (nowAuthenticated && id) {\r\n          // User just logged in, check watchlist status\r\n          checkWatchlistStatus(id);\r\n        } else if (!nowAuthenticated) {\r\n          // User just logged out, reset watchlist status\r\n          setIsInWatchlist(false);\r\n          setWatchlistChecked(true);\r\n        }\r\n      }\r\n    };\r\n\r\n    // Listen for storage changes (login/logout in another tab)\r\n    window.addEventListener('storage', handleAuthChange);\r\n    \r\n    // Also listen for focus events to catch auth changes\r\n    window.addEventListener('focus', handleAuthChange);\r\n    \r\n    return () => {\r\n      window.removeEventListener('storage', handleAuthChange);\r\n      window.removeEventListener('focus', handleAuthChange);\r\n    };\r\n  }, [id, isAuthenticated]);\r\n\r\n  // Handle watchlist toggle\r\n  const handleWatchlistToggle = async () => {\r\n    const token = localStorage.getItem('token');\r\n    if (!token) {\r\n      setSnackbarMessage('Please log in to manage your watchlist');\r\n      setSnackbarOpen(true);\r\n      return;\r\n    }\r\n\r\n    setWatchlistLoading(true);\r\n\r\n    try {\r\n      if (isInWatchlist) {\r\n        // Remove from watchlist\r\n        await axios.delete(`${url}/api/watchlist/remove`, {\r\n          data: { movieid: parseInt(id) },\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`\r\n          }\r\n        });\r\n        \r\n        setIsInWatchlist(false);\r\n        setSnackbarMessage('Movie removed from watchlist');\r\n      } else {\r\n        // Add to watchlist\r\n        await axios.post(`${url}/api/watchlist/add`, {\r\n          movieid: parseInt(id)\r\n        }, {\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`\r\n          }\r\n        });\r\n        \r\n        setIsInWatchlist(true);\r\n        setSnackbarMessage('Movie added to watchlist');\r\n      }\r\n      \r\n      setSnackbarOpen(true);\r\n    } catch (error) {\r\n      console.error(\"Error updating watchlist:\", error);\r\n      \r\n      let errorMessage = 'Failed to update watchlist';\r\n      if (error.response?.status === 400) {\r\n        errorMessage = 'Movie is already in watchlist';\r\n      } else if (error.response?.status === 401) {\r\n        errorMessage = 'Please log in to manage your watchlist';\r\n        // Clear token if unauthorized\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('user');\r\n        setIsInWatchlist(false);\r\n        setIsAuthenticated(false);\r\n      } else if (error.response?.status === 404) {\r\n        errorMessage = isInWatchlist ? 'Movie not found in watchlist' : 'Watchlist not found';\r\n      }\r\n      \r\n      setSnackbarMessage(errorMessage);\r\n      setSnackbarOpen(true);\r\n    } finally {\r\n      setWatchlistLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleTrailerPlay = (trailer) => {\r\n    setSelectedTrailer(trailer);\r\n    setTrailerOpen(true);\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    return new Date(dateString).toLocaleDateString('en-US', {\r\n      year: 'numeric',\r\n      month: 'long',\r\n      day: 'numeric'\r\n    });\r\n  };\r\n\r\n  const formatDuration = (minutes) => {\r\n    const hours = Math.floor(minutes / 60);\r\n    const mins = minutes % 60;\r\n    return hours > 0 ? `${hours}h ${mins}m` : `${mins}m`;\r\n  };\r\n\r\n  // Get watchlist button props - Enhanced with better status detection\r\n  const getWatchlistButtonProps = () => {\r\n    // If not authenticated, show login prompt\r\n    if (!isAuthenticated) {\r\n      return {\r\n        startIcon: <BookmarkAdd />,\r\n        className: '',\r\n        text: 'Login to Add to Watchlist',\r\n        disabled: false\r\n      };\r\n    }\r\n\r\n    // If watchlist status is being checked or updated\r\n    if (watchlistLoading || !watchlistChecked) {\r\n      return {\r\n        startIcon: <BookmarkAdd />,\r\n        className: '',\r\n        text: 'Loading...',\r\n        disabled: true\r\n      };\r\n    }\r\n\r\n    // If movie is in watchlist\r\n    if (isInWatchlist) {\r\n      return {\r\n        startIcon: <BookmarkAdded />,\r\n        className: 'added',\r\n        text: 'In Watchlist âœ“',\r\n        disabled: false\r\n      };\r\n    }\r\n\r\n    // Default state - not in watchlist\r\n    return {\r\n      startIcon: <BookmarkAdd />,\r\n      className: '',\r\n      text: 'Add to Watchlist',\r\n      disabled: false\r\n    };\r\n  };\r\n\r\n  // Loading and error states\r\n  if (loading) {\r\n    return <LoadingState />;\r\n  }\r\n\r\n  if (error) {\r\n    return <ErrorState error={error} />;\r\n  }\r\n\r\n  if (!movie) {\r\n    return <NotFoundState />;\r\n  }\r\n\r\n  const watchlistButtonProps = getWatchlistButtonProps();\r\n\r\n  return (\r\n    <StyledContainer>\r\n      {/* Hero Section */}\r\n      <HeroSection\r\n        movie={movie}\r\n        onTrailerPlay={handleTrailerPlay}\r\n        onWatchlistToggle={handleWatchlistToggle}\r\n        watchlistButtonProps={watchlistButtonProps}\r\n        formatDate={formatDate}\r\n        formatDuration={formatDuration}\r\n      />\r\n\r\n      {/* Synopsis Section */}\r\n      <SynopsisSection synopsis={movie.synopsis} />\r\n\r\n      {/* Details Section */}\r\n      <Box sx={{ backgroundColor: '#121212', minHeight: '100vh', py: 4 }}>\r\n        <Container maxWidth=\"xl\">\r\n          {/* Awards Section */}\r\n          <AwardsSection awards={movie.awards} />\r\n\r\n          {/* Cast Section */}\r\n          <CastSection cast={movie.cast} formatDate={formatDate} />\r\n\r\n          {/* Crew Section */}\r\n          <CrewSection \r\n            directors={movie.directors} \r\n            writers={movie.writers} \r\n            formatDate={formatDate} \r\n          />\r\n\r\n          {/* Studios Section */}\r\n          <StudiosSection studios={movie.studios} />\r\n\r\n          {/* Reviews Section */}\r\n          <ReviewsSection reviews={movie.reviews} formatDate={formatDate} />\r\n        </Container>\r\n      </Box>\r\n\r\n      {/* Trailer Dialog */}\r\n      <TrailerDialog\r\n        open={trailerOpen}\r\n        onClose={() => setTrailerOpen(false)}\r\n        selectedTrailer={selectedTrailer}\r\n      />\r\n\r\n      {/* Notification Snackbar */}\r\n      <NotificationSnackbar\r\n        open={snackbarOpen}\r\n        message={snackbarMessage}\r\n        onClose={() => setSnackbarOpen(false)}\r\n      />\r\n    </StyledContainer>\r\n  );\r\n}\r\n\r\nexport default MovieDetails;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}