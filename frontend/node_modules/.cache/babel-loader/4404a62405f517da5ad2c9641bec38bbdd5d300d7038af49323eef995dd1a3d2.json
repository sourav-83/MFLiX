{"ast":null,"code":"var _jsxFileName = \"D:\\\\react movie website\\\\frontend\\\\src\\\\pages\\\\MovieDetails.jsx\",\n  _s = $RefreshSig$();\n// MovieDetails.jsx\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useParams } from \"react-router-dom\";\nimport { Box, Container, styled, Typography } from \"@mui/material\";\nimport { BookmarkAdd, BookmarkAdded } from \"@mui/icons-material\";\nimport url from \"../constants/url\";\n\n// Import reusable components\nimport HeroSection from \"../components/movie details/HeroSection\";\nimport SynopsisSection from \"../components/movie details/SynopsisSection\";\nimport AwardsSection from \"../components/movie details/AwardsSection\";\nimport CastSection from \"../components/movie details/CastSection\";\nimport CrewSection from \"../components/movie details/CrewSection\";\nimport StudiosSection from \"../components/movie details/StudiosSection\";\nimport ReviewsSection from \"../components/movie details/ReviewsSection\";\nimport UserReviewSection from \"../components/movie details/UserReviewSection\";\nimport TrailerDialog from \"../components/movie details/TrailerDialog\";\nimport NotificationSnackbar from \"../components/movie details/NotificationSnackbar\";\nimport { LoadingState, ErrorState, NotFoundState } from \"../components/movie details/LoadingErrorStates\";\nimport Slide from \"../components/common/Slide\";\nimport UserRatingDisplay from \"../components/movie details/UserRatingDisplay\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledContainer = styled(Container)`\n  padding: 0;\n  max-width: none !important;\n`;\n_c = StyledContainer;\nconst SimilarMoviesSection = styled(Box)`\n  background-color: #121212;\n  padding: 40px 0;\n`;\n_c2 = SimilarMoviesSection;\nconst SectionTitle = styled(Typography)`\n  color: #FFFFFF;\n  font-size: 28px;\n  font-weight: 600;\n  margin-bottom: 24px;\n  padding-left: 16px;\n`;\n_c3 = SectionTitle;\nfunction MovieDetails() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [trailerOpen, setTrailerOpen] = useState(false);\n  const [selectedTrailer, setSelectedTrailer] = useState(null);\n  const [isInWatchlist, setIsInWatchlist] = useState(false);\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState('');\n  const [watchlistLoading, setWatchlistLoading] = useState(false);\n  const [watchlistChecked, setWatchlistChecked] = useState(false);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [similarMovies, setSimilarMovies] = useState([]);\n  const [similarMoviesLoading, setSimilarMoviesLoading] = useState(false);\n\n  // New state for reviews\n  const [reviews, setReviews] = useState([]);\n  const [reviewsLoading, setReviewsLoading] = useState(false);\n  const [reviewsError, setReviewsError] = useState(null);\n\n  // Check authentication status\n  const checkAuthStatus = () => {\n    const token = localStorage.getItem('token');\n    setIsAuthenticated(!!token);\n    return !!token;\n  };\n\n  // Fetch movie details\n  const fetchMovieDetails = async movieId => {\n    try {\n      const response = await axios.get(`${url}/api/movies/${movieId}`);\n      setMovie(response.data);\n      setError(null);\n    } catch (error) {\n      console.error(\"Error fetching movie details:\", error);\n      setError(\"Movie not found\");\n      throw error;\n    }\n  };\n\n  // Fetch movie reviews\n  const fetchMovieReviews = async movieId => {\n    try {\n      setReviewsLoading(true);\n      setReviewsError(null);\n      const response = await axios.get(`${url}/api/reviews/movie/${movieId}`);\n      setReviews(response.data.reviews || []);\n    } catch (error) {\n      console.error(\"Error fetching movie reviews:\", error);\n      setReviewsError(\"Failed to load reviews\");\n      setReviews([]);\n    } finally {\n      setReviewsLoading(false);\n    }\n  };\n\n  // Fetch similar movies\n  const fetchSimilarMovies = async movieId => {\n    try {\n      setSimilarMoviesLoading(true);\n      const response = await axios.get(`${url}/api/movies/${movieId}/similar`);\n      setSimilarMovies(response.data);\n    } catch (error) {\n      console.error(\"Error fetching similar movies:\", error);\n      setSimilarMovies([]);\n    } finally {\n      setSimilarMoviesLoading(false);\n    }\n  };\n\n  // Check if movie is in watchlist\n  const checkWatchlistStatus = async movieId => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        setIsInWatchlist(false);\n        setWatchlistChecked(true);\n        return;\n      }\n      setWatchlistLoading(true);\n      const response = await axios.get(`${url}/api/watchlist/check/${movieId}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setIsInWatchlist(response.data.inWatchlist);\n      setWatchlistChecked(true);\n    } catch (error) {\n      var _error$response;\n      console.error(\"Error checking watchlist status:\", error);\n      // If token is invalid, clear it\n      if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n        setIsAuthenticated(false);\n      }\n      setIsInWatchlist(false);\n      setWatchlistChecked(true);\n    } finally {\n      setWatchlistLoading(false);\n    }\n  };\n\n  // Handle review voting\n  const handleVoteReview = async (reviewId, voteType) => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      setSnackbarMessage('Please log in to vote on reviews');\n      setSnackbarOpen(true);\n      return;\n    }\n    try {\n      await axios.post(`${url}/api/reviews/${reviewId}/vote`, {\n        voteType: voteType // 'upvote' or 'downvote'\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n\n      // Refresh reviews to get updated vote counts\n      await fetchMovieReviews(id);\n    } catch (error) {\n      var _error$response2, _error$response3, _error$response4;\n      console.error('Error voting on review:', error);\n      let errorMessage = 'Failed to vote on review';\n      if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 401) {\n        errorMessage = 'Please log in to vote on reviews';\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n        setIsAuthenticated(false);\n      } else if (((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status) === 400) {\n        errorMessage = 'You have already voted on this review';\n      } else if (((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.status) === 403) {\n        errorMessage = 'You cannot vote on your own review';\n      }\n      setSnackbarMessage(errorMessage);\n      setSnackbarOpen(true);\n      throw error;\n    }\n  };\n\n  // Initialize component\n  useEffect(() => {\n    const initializeComponent = async () => {\n      if (!id) return;\n      setLoading(true);\n      setWatchlistChecked(false);\n\n      // Check authentication status\n      const authenticated = checkAuthStatus();\n      try {\n        // Fetch movie details\n        await fetchMovieDetails(id);\n\n        // Fetch movie reviews\n        fetchMovieReviews(id);\n\n        // Fetch similar movies in parallel\n        fetchSimilarMovies(id);\n\n        // Check watchlist status if authenticated\n        if (authenticated) {\n          await checkWatchlistStatus(id);\n        } else {\n          setWatchlistChecked(true);\n          setIsInWatchlist(false);\n        }\n      } catch (error) {\n        console.error(\"Error initializing component:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    initializeComponent();\n  }, [id]);\n\n  // Listen for authentication changes (including login/logout in other tabs)\n  useEffect(() => {\n    const handleAuthChange = () => {\n      const wasAuthenticated = isAuthenticated;\n      const nowAuthenticated = checkAuthStatus();\n      if (nowAuthenticated !== wasAuthenticated) {\n        if (nowAuthenticated && id) {\n          // User just logged in, check watchlist status\n          checkWatchlistStatus(id);\n        } else if (!nowAuthenticated) {\n          // User just logged out, reset watchlist status\n          setIsInWatchlist(false);\n          setWatchlistChecked(true);\n        }\n      }\n    };\n\n    // Listen for storage changes (login/logout in another tab)\n    window.addEventListener('storage', handleAuthChange);\n\n    // Also listen for focus events to catch auth changes\n    window.addEventListener('focus', handleAuthChange);\n    return () => {\n      window.removeEventListener('storage', handleAuthChange);\n      window.removeEventListener('focus', handleAuthChange);\n    };\n  }, [id, isAuthenticated]);\n\n  // Handle watchlist toggle\n  const handleWatchlistToggle = async () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      setSnackbarMessage('Please log in to manage your watchlist');\n      setSnackbarOpen(true);\n      return;\n    }\n    setWatchlistLoading(true);\n    try {\n      if (isInWatchlist) {\n        // Remove from watchlist\n        await axios.delete(`${url}/api/watchlist/remove`, {\n          data: {\n            movieid: parseInt(id)\n          },\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        setIsInWatchlist(false);\n        setSnackbarMessage('Movie removed from watchlist');\n      } else {\n        // Add to watchlist\n        await axios.post(`${url}/api/watchlist/add`, {\n          movieid: parseInt(id)\n        }, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        setIsInWatchlist(true);\n        setSnackbarMessage('Movie added to watchlist');\n      }\n      setSnackbarOpen(true);\n    } catch (error) {\n      var _error$response5, _error$response6, _error$response7;\n      console.error(\"Error updating watchlist:\", error);\n      let errorMessage = 'Failed to update watchlist';\n      if (((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.status) === 400) {\n        errorMessage = 'Movie is already in watchlist';\n      } else if (((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.status) === 401) {\n        errorMessage = 'Please log in to manage your watchlist';\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n        setIsInWatchlist(false);\n        setIsAuthenticated(false);\n      } else if (((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : _error$response7.status) === 404) {\n        errorMessage = isInWatchlist ? 'Movie not found in watchlist' : 'Watchlist not found';\n      }\n      setSnackbarMessage(errorMessage);\n      setSnackbarOpen(true);\n    } finally {\n      setWatchlistLoading(false);\n    }\n  };\n  const handleTrailerPlay = trailer => {\n    setSelectedTrailer(trailer);\n    setTrailerOpen(true);\n  };\n  const formatDate = dateString => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    });\n  };\n  const formatDuration = minutes => {\n    const hours = Math.floor(minutes / 60);\n    const mins = minutes % 60;\n    return hours > 0 ? `${hours}h ${mins}m` : `${mins}m`;\n  };\n\n  // Get watchlist button props - Enhanced with better status detection\n  const getWatchlistButtonProps = () => {\n    // If not authenticated, show login prompt\n    if (!isAuthenticated) {\n      return {\n        startIcon: /*#__PURE__*/_jsxDEV(BookmarkAdd, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 20\n        }, this),\n        className: '',\n        text: 'Login to Add to Watchlist',\n        disabled: false\n      };\n    }\n\n    // If watchlist status is being checked or updated\n    if (watchlistLoading || !watchlistChecked) {\n      return {\n        startIcon: /*#__PURE__*/_jsxDEV(BookmarkAdd, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 20\n        }, this),\n        className: '',\n        text: 'Loading...',\n        disabled: true\n      };\n    }\n\n    // If movie is in watchlist\n    if (isInWatchlist) {\n      return {\n        startIcon: /*#__PURE__*/_jsxDEV(BookmarkAdded, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 20\n        }, this),\n        className: 'added',\n        text: 'In Watchlist ✓',\n        disabled: false\n      };\n    }\n\n    // Default state - not in watchlist\n    return {\n      startIcon: /*#__PURE__*/_jsxDEV(BookmarkAdd, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 18\n      }, this),\n      className: '',\n      text: 'Add to Watchlist',\n      disabled: false\n    };\n  };\n\n  // Function to refresh reviews after a new review is added\n  const handleReviewAdded = () => {\n    fetchMovieReviews(id);\n  };\n\n  // Loading and error states\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(LoadingState, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(ErrorState, {\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 12\n    }, this);\n  }\n  if (!movie) {\n    return /*#__PURE__*/_jsxDEV(NotFoundState, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 12\n    }, this);\n  }\n  const watchlistButtonProps = getWatchlistButtonProps();\n  return /*#__PURE__*/_jsxDEV(StyledContainer, {\n    children: [/*#__PURE__*/_jsxDEV(HeroSection, {\n      movie: movie,\n      onTrailerPlay: handleTrailerPlay,\n      onWatchlistToggle: handleWatchlistToggle,\n      watchlistButtonProps: watchlistButtonProps,\n      formatDate: formatDate,\n      formatDuration: formatDuration\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UserRatingDisplay, {\n      movieId: id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SynopsisSection, {\n      synopsis: movie.synopsis\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        backgroundColor: '#121212',\n        minHeight: '100vh',\n        py: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"xl\",\n        children: [/*#__PURE__*/_jsxDEV(AwardsSection, {\n          awards: movie.awards\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CastSection, {\n          cast: movie.cast,\n          formatDate: formatDate,\n          isAuthenticated: isAuthenticated,\n          movieId: id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CrewSection, {\n          directors: movie.directors,\n          writers: movie.writers,\n          formatDate: formatDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StudiosSection, {\n          studios: movie.studios\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ReviewsSection, {\n          reviews: reviews,\n          reviewsLoading: reviewsLoading,\n          reviewsError: reviewsError,\n          formatDate: formatDate,\n          onVoteReview: handleVoteReview\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UserReviewSection, {\n      movieId: id,\n      isAuthenticated: isAuthenticated,\n      onReviewAdded: handleReviewAdded\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 7\n    }, this), !similarMoviesLoading && similarMovies.length > 0 && /*#__PURE__*/_jsxDEV(SimilarMoviesSection, {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"xl\",\n        children: [/*#__PURE__*/_jsxDEV(SectionTitle, {\n          variant: \"h4\",\n          sx: {\n            color: '#F5C518'\n          },\n          children: \"More like this\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Slide, {\n          movies: similarMovies\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TrailerDialog, {\n      open: trailerOpen,\n      onClose: () => setTrailerOpen(false),\n      selectedTrailer: selectedTrailer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NotificationSnackbar, {\n      open: snackbarOpen,\n      message: snackbarMessage,\n      onClose: () => setSnackbarOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 399,\n    columnNumber: 5\n  }, this);\n}\n_s(MovieDetails, \"AYo0P9+zUH31PgOAStvXWzXfQz4=\", false, function () {\n  return [useParams];\n});\n_c4 = MovieDetails;\nexport default MovieDetails;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"StyledContainer\");\n$RefreshReg$(_c2, \"SimilarMoviesSection\");\n$RefreshReg$(_c3, \"SectionTitle\");\n$RefreshReg$(_c4, \"MovieDetails\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","Box","Container","styled","Typography","BookmarkAdd","BookmarkAdded","url","HeroSection","SynopsisSection","AwardsSection","CastSection","CrewSection","StudiosSection","ReviewsSection","UserReviewSection","TrailerDialog","NotificationSnackbar","LoadingState","ErrorState","NotFoundState","Slide","UserRatingDisplay","jsxDEV","_jsxDEV","StyledContainer","_c","SimilarMoviesSection","_c2","SectionTitle","_c3","MovieDetails","_s","id","movie","setMovie","loading","setLoading","error","setError","trailerOpen","setTrailerOpen","selectedTrailer","setSelectedTrailer","isInWatchlist","setIsInWatchlist","snackbarOpen","setSnackbarOpen","snackbarMessage","setSnackbarMessage","watchlistLoading","setWatchlistLoading","watchlistChecked","setWatchlistChecked","isAuthenticated","setIsAuthenticated","similarMovies","setSimilarMovies","similarMoviesLoading","setSimilarMoviesLoading","reviews","setReviews","reviewsLoading","setReviewsLoading","reviewsError","setReviewsError","checkAuthStatus","token","localStorage","getItem","fetchMovieDetails","movieId","response","get","data","console","fetchMovieReviews","fetchSimilarMovies","checkWatchlistStatus","headers","inWatchlist","_error$response","status","removeItem","handleVoteReview","reviewId","voteType","post","_error$response2","_error$response3","_error$response4","errorMessage","initializeComponent","authenticated","handleAuthChange","wasAuthenticated","nowAuthenticated","window","addEventListener","removeEventListener","handleWatchlistToggle","delete","movieid","parseInt","_error$response5","_error$response6","_error$response7","handleTrailerPlay","trailer","formatDate","dateString","Date","toLocaleDateString","year","month","day","formatDuration","minutes","hours","Math","floor","mins","getWatchlistButtonProps","startIcon","fileName","_jsxFileName","lineNumber","columnNumber","className","text","disabled","handleReviewAdded","watchlistButtonProps","children","onTrailerPlay","onWatchlistToggle","synopsis","sx","backgroundColor","minHeight","py","maxWidth","awards","cast","directors","writers","studios","onVoteReview","onReviewAdded","length","variant","color","movies","open","onClose","message","_c4","$RefreshReg$"],"sources":["D:/react movie website/frontend/src/pages/MovieDetails.jsx"],"sourcesContent":["// MovieDetails.jsx\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Box, Container, styled, Typography } from \"@mui/material\";\r\nimport { BookmarkAdd, BookmarkAdded } from \"@mui/icons-material\";\r\nimport url from \"../constants/url\";\r\n\r\n// Import reusable components\r\nimport HeroSection from \"../components/movie details/HeroSection\";\r\nimport SynopsisSection from \"../components/movie details/SynopsisSection\";\r\nimport AwardsSection from \"../components/movie details/AwardsSection\";\r\nimport CastSection from \"../components/movie details/CastSection\";\r\nimport CrewSection from \"../components/movie details/CrewSection\";\r\nimport StudiosSection from \"../components/movie details/StudiosSection\";\r\nimport ReviewsSection from \"../components/movie details/ReviewsSection\";\r\nimport UserReviewSection from \"../components/movie details/UserReviewSection\";\r\nimport TrailerDialog from \"../components/movie details/TrailerDialog\";\r\nimport NotificationSnackbar from \"../components/movie details/NotificationSnackbar\";\r\nimport { LoadingState, ErrorState, NotFoundState } from \"../components/movie details/LoadingErrorStates\";\r\nimport Slide from \"../components/common/Slide\";\r\nimport UserRatingDisplay from \"../components/movie details/UserRatingDisplay\";\r\n\r\nconst StyledContainer = styled(Container)`\r\n  padding: 0;\r\n  max-width: none !important;\r\n`;\r\n\r\nconst SimilarMoviesSection = styled(Box)`\r\n  background-color: #121212;\r\n  padding: 40px 0;\r\n`;\r\n\r\nconst SectionTitle = styled(Typography)`\r\n  color: #FFFFFF;\r\n  font-size: 28px;\r\n  font-weight: 600;\r\n  margin-bottom: 24px;\r\n  padding-left: 16px;\r\n`;\r\n\r\nfunction MovieDetails() {\r\n  const { id } = useParams();\r\n  const [movie, setMovie] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [trailerOpen, setTrailerOpen] = useState(false);\r\n  const [selectedTrailer, setSelectedTrailer] = useState(null);\r\n  const [isInWatchlist, setIsInWatchlist] = useState(false);\r\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\r\n  const [snackbarMessage, setSnackbarMessage] = useState('');\r\n  const [watchlistLoading, setWatchlistLoading] = useState(false);\r\n  const [watchlistChecked, setWatchlistChecked] = useState(false);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [similarMovies, setSimilarMovies] = useState([]); \r\n  const [similarMoviesLoading, setSimilarMoviesLoading] = useState(false);\r\n  \r\n  // New state for reviews\r\n  const [reviews, setReviews] = useState([]);\r\n  const [reviewsLoading, setReviewsLoading] = useState(false);\r\n  const [reviewsError, setReviewsError] = useState(null);\r\n\r\n  // Check authentication status\r\n  const checkAuthStatus = () => {\r\n    const token = localStorage.getItem('token');\r\n    setIsAuthenticated(!!token);\r\n    return !!token;\r\n  };\r\n\r\n  // Fetch movie details\r\n  const fetchMovieDetails = async (movieId) => {\r\n    try {\r\n      const response = await axios.get(`${url}/api/movies/${movieId}`);\r\n      setMovie(response.data);\r\n      setError(null);\r\n    } catch (error) {\r\n      console.error(\"Error fetching movie details:\", error);\r\n      setError(\"Movie not found\");\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Fetch movie reviews\r\n  const fetchMovieReviews = async (movieId) => {\r\n    try {\r\n      setReviewsLoading(true);\r\n      setReviewsError(null);\r\n      const response = await axios.get(`${url}/api/reviews/movie/${movieId}`);\r\n      setReviews(response.data.reviews || []);\r\n    } catch (error) {\r\n      console.error(\"Error fetching movie reviews:\", error);\r\n      setReviewsError(\"Failed to load reviews\");\r\n      setReviews([]);\r\n    } finally {\r\n      setReviewsLoading(false);\r\n    }\r\n  };\r\n\r\n  // Fetch similar movies\r\n  const fetchSimilarMovies = async (movieId) => {\r\n    try {\r\n      setSimilarMoviesLoading(true);\r\n      const response = await axios.get(`${url}/api/movies/${movieId}/similar`);\r\n      setSimilarMovies(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching similar movies:\", error);\r\n      setSimilarMovies([]);\r\n    } finally {\r\n      setSimilarMoviesLoading(false);\r\n    }\r\n  };\r\n\r\n  // Check if movie is in watchlist\r\n  const checkWatchlistStatus = async (movieId) => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        setIsInWatchlist(false);\r\n        setWatchlistChecked(true);\r\n        return;\r\n      }\r\n\r\n      setWatchlistLoading(true);\r\n      const response = await axios.get(`${url}/api/watchlist/check/${movieId}`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n      \r\n      setIsInWatchlist(response.data.inWatchlist);\r\n      setWatchlistChecked(true);\r\n    } catch (error) {\r\n      console.error(\"Error checking watchlist status:\", error);\r\n      // If token is invalid, clear it\r\n      if (error.response?.status === 401) {\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('user');\r\n        setIsAuthenticated(false);\r\n      }\r\n      setIsInWatchlist(false);\r\n      setWatchlistChecked(true);\r\n    } finally {\r\n      setWatchlistLoading(false);\r\n    }\r\n  };\r\n\r\n  // Handle review voting\r\n  const handleVoteReview = async (reviewId, voteType) => {\r\n    const token = localStorage.getItem('token');\r\n    if (!token) {\r\n      setSnackbarMessage('Please log in to vote on reviews');\r\n      setSnackbarOpen(true);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await axios.post(`${url}/api/reviews/${reviewId}/vote`, {\r\n        voteType: voteType // 'upvote' or 'downvote'\r\n      }, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n\r\n      // Refresh reviews to get updated vote counts\r\n      await fetchMovieReviews(id);\r\n      \r\n    } catch (error) {\r\n      console.error('Error voting on review:', error);\r\n      \r\n      let errorMessage = 'Failed to vote on review';\r\n      if (error.response?.status === 401) {\r\n        errorMessage = 'Please log in to vote on reviews';\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('user');\r\n        setIsAuthenticated(false);\r\n      } else if (error.response?.status === 400) {\r\n        errorMessage = 'You have already voted on this review';\r\n      } else if (error.response?.status === 403) {\r\n        errorMessage = 'You cannot vote on your own review';\r\n      }\r\n      \r\n      setSnackbarMessage(errorMessage);\r\n      setSnackbarOpen(true);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Initialize component\r\n  useEffect(() => {\r\n    const initializeComponent = async () => {\r\n      if (!id) return;\r\n      \r\n      setLoading(true);\r\n      setWatchlistChecked(false);\r\n      \r\n      // Check authentication status\r\n      const authenticated = checkAuthStatus();\r\n      \r\n      try {\r\n        // Fetch movie details\r\n        await fetchMovieDetails(id);\r\n        \r\n        // Fetch movie reviews\r\n        fetchMovieReviews(id);\r\n        \r\n        // Fetch similar movies in parallel\r\n        fetchSimilarMovies(id);\r\n        \r\n        // Check watchlist status if authenticated\r\n        if (authenticated) {\r\n          await checkWatchlistStatus(id);\r\n        } else {\r\n          setWatchlistChecked(true);\r\n          setIsInWatchlist(false);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error initializing component:\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    initializeComponent();\r\n  }, [id]);\r\n\r\n  // Listen for authentication changes (including login/logout in other tabs)\r\n  useEffect(() => {\r\n    const handleAuthChange = () => {\r\n      const wasAuthenticated = isAuthenticated;\r\n      const nowAuthenticated = checkAuthStatus();\r\n      \r\n      if (nowAuthenticated !== wasAuthenticated) {\r\n        if (nowAuthenticated && id) {\r\n          // User just logged in, check watchlist status\r\n          checkWatchlistStatus(id);\r\n        } else if (!nowAuthenticated) {\r\n          // User just logged out, reset watchlist status\r\n          setIsInWatchlist(false);\r\n          setWatchlistChecked(true);\r\n        }\r\n      }\r\n    };\r\n\r\n    // Listen for storage changes (login/logout in another tab)\r\n    window.addEventListener('storage', handleAuthChange);\r\n    \r\n    // Also listen for focus events to catch auth changes\r\n    window.addEventListener('focus', handleAuthChange);\r\n    \r\n    return () => {\r\n      window.removeEventListener('storage', handleAuthChange);\r\n      window.removeEventListener('focus', handleAuthChange);\r\n    };\r\n  }, [id, isAuthenticated]);\r\n\r\n  // Handle watchlist toggle\r\n  const handleWatchlistToggle = async () => {\r\n    const token = localStorage.getItem('token');\r\n    if (!token) {\r\n      setSnackbarMessage('Please log in to manage your watchlist');\r\n      setSnackbarOpen(true);\r\n      return;\r\n    }\r\n\r\n    setWatchlistLoading(true);\r\n\r\n    try {\r\n      if (isInWatchlist) {\r\n        // Remove from watchlist\r\n        await axios.delete(`${url}/api/watchlist/remove`, {\r\n          data: { movieid: parseInt(id) },\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`\r\n          }\r\n        });\r\n        \r\n        setIsInWatchlist(false);\r\n        setSnackbarMessage('Movie removed from watchlist');\r\n      } else {\r\n        // Add to watchlist\r\n        await axios.post(`${url}/api/watchlist/add`, {\r\n          movieid: parseInt(id)\r\n        }, {\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`\r\n          }\r\n        });\r\n        \r\n        setIsInWatchlist(true);\r\n        setSnackbarMessage('Movie added to watchlist');\r\n      }\r\n      \r\n      setSnackbarOpen(true);\r\n    } catch (error) {\r\n      console.error(\"Error updating watchlist:\", error);\r\n      \r\n      let errorMessage = 'Failed to update watchlist';\r\n      if (error.response?.status === 400) {\r\n        errorMessage = 'Movie is already in watchlist';\r\n      } else if (error.response?.status === 401) {\r\n        errorMessage = 'Please log in to manage your watchlist';\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('user');\r\n        setIsInWatchlist(false);\r\n        setIsAuthenticated(false);\r\n      } else if (error.response?.status === 404) {\r\n        errorMessage = isInWatchlist ? 'Movie not found in watchlist' : 'Watchlist not found';\r\n      }\r\n      \r\n      setSnackbarMessage(errorMessage);\r\n      setSnackbarOpen(true);\r\n    } finally {\r\n      setWatchlistLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleTrailerPlay = (trailer) => {\r\n    setSelectedTrailer(trailer);\r\n    setTrailerOpen(true);\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    return new Date(dateString).toLocaleDateString('en-US', {\r\n      year: 'numeric',\r\n      month: 'long',\r\n      day: 'numeric'\r\n    });\r\n  };\r\n\r\n  const formatDuration = (minutes) => {\r\n    const hours = Math.floor(minutes / 60);\r\n    const mins = minutes % 60;\r\n    return hours > 0 ? `${hours}h ${mins}m` : `${mins}m`;\r\n  };\r\n\r\n  // Get watchlist button props - Enhanced with better status detection\r\n  const getWatchlistButtonProps = () => {\r\n    // If not authenticated, show login prompt\r\n    if (!isAuthenticated) {\r\n      return {\r\n        startIcon: <BookmarkAdd />,\r\n        className: '',\r\n        text: 'Login to Add to Watchlist',\r\n        disabled: false\r\n      };\r\n    }\r\n\r\n    // If watchlist status is being checked or updated\r\n    if (watchlistLoading || !watchlistChecked) {\r\n      return {\r\n        startIcon: <BookmarkAdd />,\r\n        className: '',\r\n        text: 'Loading...',\r\n        disabled: true\r\n      };\r\n    }\r\n\r\n    // If movie is in watchlist\r\n    if (isInWatchlist) {\r\n      return {\r\n        startIcon: <BookmarkAdded />,\r\n        className: 'added',\r\n        text: 'In Watchlist ✓',\r\n        disabled: false\r\n      };\r\n    }\r\n\r\n    // Default state - not in watchlist\r\n    return {\r\n      startIcon: <BookmarkAdd />,\r\n      className: '',\r\n      text: 'Add to Watchlist',\r\n      disabled: false\r\n    };\r\n  };\r\n\r\n  // Function to refresh reviews after a new review is added\r\n  const handleReviewAdded = () => {\r\n    fetchMovieReviews(id);\r\n  };\r\n\r\n  // Loading and error states\r\n  if (loading) {\r\n    return <LoadingState />;\r\n  }\r\n\r\n  if (error) {\r\n    return <ErrorState error={error} />;\r\n  }\r\n\r\n  if (!movie) {\r\n    return <NotFoundState />;\r\n  }\r\n\r\n  const watchlistButtonProps = getWatchlistButtonProps();\r\n\r\n  return (\r\n    <StyledContainer>\r\n      {/* Hero Section */}\r\n      <HeroSection\r\n        movie={movie}\r\n        onTrailerPlay={handleTrailerPlay}\r\n        onWatchlistToggle={handleWatchlistToggle}\r\n        watchlistButtonProps={watchlistButtonProps}\r\n        formatDate={formatDate}\r\n        formatDuration={formatDuration}\r\n      />\r\n      \r\n      {/* Add the UserRatingDisplay component here - above synopsis */}\r\n      <UserRatingDisplay movieId={id} />\r\n      \r\n      {/* Synopsis Section */}\r\n      <SynopsisSection synopsis={movie.synopsis} />\r\n\r\n      {/* Details Section */}\r\n      <Box sx={{ backgroundColor: '#121212', minHeight: '100vh', py: 4 }}>\r\n        <Container maxWidth=\"xl\">\r\n          {/* Awards Section */}\r\n          <AwardsSection awards={movie.awards} />\r\n\r\n          {/* Cast Section */}\r\n          <CastSection \r\n            cast={movie.cast} \r\n            formatDate={formatDate} \r\n            isAuthenticated={isAuthenticated}\r\n            movieId={id}\r\n          />\r\n\r\n          {/* Crew Section */}\r\n          <CrewSection \r\n            directors={movie.directors} \r\n            writers={movie.writers} \r\n            formatDate={formatDate} \r\n          />\r\n\r\n          {/* Studios Section */}\r\n          <StudiosSection studios={movie.studios} />\r\n\r\n          {/* Reviews Section - Updated to use separate reviews state */}\r\n          <ReviewsSection \r\n            reviews={reviews}\r\n            reviewsLoading={reviewsLoading}\r\n            reviewsError={reviewsError}\r\n            formatDate={formatDate} \r\n            onVoteReview={handleVoteReview}\r\n          />\r\n        </Container>\r\n      </Box>\r\n\r\n      {/* User Review Section */}\r\n      <UserReviewSection \r\n        movieId={id} \r\n        isAuthenticated={isAuthenticated}\r\n        onReviewAdded={handleReviewAdded}\r\n      />\r\n\r\n      {/* Similar Movies Section */}\r\n      {!similarMoviesLoading && similarMovies.length > 0 && (\r\n        <SimilarMoviesSection>\r\n          <Container maxWidth=\"xl\">\r\n            <SectionTitle variant=\"h4\" sx={{ color: '#F5C518' }}>\r\n              More like this\r\n            </SectionTitle>\r\n\r\n            <Slide movies={similarMovies} />\r\n          </Container>\r\n        </SimilarMoviesSection>\r\n      )}\r\n\r\n      {/* Trailer Dialog */}\r\n      <TrailerDialog\r\n        open={trailerOpen}\r\n        onClose={() => setTrailerOpen(false)}\r\n        selectedTrailer={selectedTrailer}\r\n      />\r\n\r\n      {/* Notification Snackbar */}\r\n      <NotificationSnackbar\r\n        open={snackbarOpen}\r\n        message={snackbarMessage}\r\n        onClose={() => setSnackbarOpen(false)}\r\n      />\r\n    </StyledContainer>\r\n  );\r\n}\r\n\r\nexport default MovieDetails;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,GAAG,EAAEC,SAAS,EAAEC,MAAM,EAAEC,UAAU,QAAQ,eAAe;AAClE,SAASC,WAAW,EAAEC,aAAa,QAAQ,qBAAqB;AAChE,OAAOC,GAAG,MAAM,kBAAkB;;AAElC;AACA,OAAOC,WAAW,MAAM,yCAAyC;AACjE,OAAOC,eAAe,MAAM,6CAA6C;AACzE,OAAOC,aAAa,MAAM,2CAA2C;AACrE,OAAOC,WAAW,MAAM,yCAAyC;AACjE,OAAOC,WAAW,MAAM,yCAAyC;AACjE,OAAOC,cAAc,MAAM,4CAA4C;AACvE,OAAOC,cAAc,MAAM,4CAA4C;AACvE,OAAOC,iBAAiB,MAAM,+CAA+C;AAC7E,OAAOC,aAAa,MAAM,2CAA2C;AACrE,OAAOC,oBAAoB,MAAM,kDAAkD;AACnF,SAASC,YAAY,EAAEC,UAAU,EAAEC,aAAa,QAAQ,gDAAgD;AACxG,OAAOC,KAAK,MAAM,4BAA4B;AAC9C,OAAOC,iBAAiB,MAAM,+CAA+C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,eAAe,GAAGtB,MAAM,CAACD,SAAS,CAAC;AACzC;AACA;AACA,CAAC;AAACwB,EAAA,GAHID,eAAe;AAKrB,MAAME,oBAAoB,GAAGxB,MAAM,CAACF,GAAG,CAAC;AACxC;AACA;AACA,CAAC;AAAC2B,GAAA,GAHID,oBAAoB;AAK1B,MAAME,YAAY,GAAG1B,MAAM,CAACC,UAAU,CAAC;AACvC;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC0B,GAAA,GANID,YAAY;AAQlB,SAASE,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM;IAAEC;EAAG,CAAC,GAAGjC,SAAS,CAAC,CAAC;EAC1B,MAAM,CAACkC,KAAK,EAAEC,QAAQ,CAAC,GAAGtC,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACuC,OAAO,EAAEC,UAAU,CAAC,GAAGxC,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACyC,KAAK,EAAEC,QAAQ,CAAC,GAAG1C,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAAC2C,WAAW,EAAEC,cAAc,CAAC,GAAG5C,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAAC6C,eAAe,EAAEC,kBAAkB,CAAC,GAAG9C,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAAC+C,aAAa,EAAEC,gBAAgB,CAAC,GAAGhD,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACiD,YAAY,EAAEC,eAAe,CAAC,GAAGlD,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACmD,eAAe,EAAEC,kBAAkB,CAAC,GAAGpD,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACqD,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGtD,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAM,CAACuD,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGxD,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAM,CAACyD,eAAe,EAAEC,kBAAkB,CAAC,GAAG1D,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAAC2D,aAAa,EAAEC,gBAAgB,CAAC,GAAG5D,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAAC6D,oBAAoB,EAAEC,uBAAuB,CAAC,GAAG9D,QAAQ,CAAC,KAAK,CAAC;;EAEvE;EACA,MAAM,CAAC+D,OAAO,EAAEC,UAAU,CAAC,GAAGhE,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACiE,cAAc,EAAEC,iBAAiB,CAAC,GAAGlE,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACmE,YAAY,EAAEC,eAAe,CAAC,GAAGpE,QAAQ,CAAC,IAAI,CAAC;;EAEtD;EACA,MAAMqE,eAAe,GAAGA,CAAA,KAAM;IAC5B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3Cd,kBAAkB,CAAC,CAAC,CAACY,KAAK,CAAC;IAC3B,OAAO,CAAC,CAACA,KAAK;EAChB,CAAC;;EAED;EACA,MAAMG,iBAAiB,GAAG,MAAOC,OAAO,IAAK;IAC3C,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMzE,KAAK,CAAC0E,GAAG,CAAC,GAAGlE,GAAG,eAAegE,OAAO,EAAE,CAAC;MAChEpC,QAAQ,CAACqC,QAAQ,CAACE,IAAI,CAAC;MACvBnC,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC,CAAC,OAAOD,KAAK,EAAE;MACdqC,OAAO,CAACrC,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACrDC,QAAQ,CAAC,iBAAiB,CAAC;MAC3B,MAAMD,KAAK;IACb;EACF,CAAC;;EAED;EACA,MAAMsC,iBAAiB,GAAG,MAAOL,OAAO,IAAK;IAC3C,IAAI;MACFR,iBAAiB,CAAC,IAAI,CAAC;MACvBE,eAAe,CAAC,IAAI,CAAC;MACrB,MAAMO,QAAQ,GAAG,MAAMzE,KAAK,CAAC0E,GAAG,CAAC,GAAGlE,GAAG,sBAAsBgE,OAAO,EAAE,CAAC;MACvEV,UAAU,CAACW,QAAQ,CAACE,IAAI,CAACd,OAAO,IAAI,EAAE,CAAC;IACzC,CAAC,CAAC,OAAOtB,KAAK,EAAE;MACdqC,OAAO,CAACrC,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACrD2B,eAAe,CAAC,wBAAwB,CAAC;MACzCJ,UAAU,CAAC,EAAE,CAAC;IAChB,CAAC,SAAS;MACRE,iBAAiB,CAAC,KAAK,CAAC;IAC1B;EACF,CAAC;;EAED;EACA,MAAMc,kBAAkB,GAAG,MAAON,OAAO,IAAK;IAC5C,IAAI;MACFZ,uBAAuB,CAAC,IAAI,CAAC;MAC7B,MAAMa,QAAQ,GAAG,MAAMzE,KAAK,CAAC0E,GAAG,CAAC,GAAGlE,GAAG,eAAegE,OAAO,UAAU,CAAC;MACxEd,gBAAgB,CAACe,QAAQ,CAACE,IAAI,CAAC;IACjC,CAAC,CAAC,OAAOpC,KAAK,EAAE;MACdqC,OAAO,CAACrC,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACtDmB,gBAAgB,CAAC,EAAE,CAAC;IACtB,CAAC,SAAS;MACRE,uBAAuB,CAAC,KAAK,CAAC;IAChC;EACF,CAAC;;EAED;EACA,MAAMmB,oBAAoB,GAAG,MAAOP,OAAO,IAAK;IAC9C,IAAI;MACF,MAAMJ,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,IAAI,CAACF,KAAK,EAAE;QACVtB,gBAAgB,CAAC,KAAK,CAAC;QACvBQ,mBAAmB,CAAC,IAAI,CAAC;QACzB;MACF;MAEAF,mBAAmB,CAAC,IAAI,CAAC;MACzB,MAAMqB,QAAQ,GAAG,MAAMzE,KAAK,CAAC0E,GAAG,CAAC,GAAGlE,GAAG,wBAAwBgE,OAAO,EAAE,EAAE;QACxEQ,OAAO,EAAE;UACP,eAAe,EAAE,UAAUZ,KAAK;QAClC;MACF,CAAC,CAAC;MAEFtB,gBAAgB,CAAC2B,QAAQ,CAACE,IAAI,CAACM,WAAW,CAAC;MAC3C3B,mBAAmB,CAAC,IAAI,CAAC;IAC3B,CAAC,CAAC,OAAOf,KAAK,EAAE;MAAA,IAAA2C,eAAA;MACdN,OAAO,CAACrC,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MACxD;MACA,IAAI,EAAA2C,eAAA,GAAA3C,KAAK,CAACkC,QAAQ,cAAAS,eAAA,uBAAdA,eAAA,CAAgBC,MAAM,MAAK,GAAG,EAAE;QAClCd,YAAY,CAACe,UAAU,CAAC,OAAO,CAAC;QAChCf,YAAY,CAACe,UAAU,CAAC,MAAM,CAAC;QAC/B5B,kBAAkB,CAAC,KAAK,CAAC;MAC3B;MACAV,gBAAgB,CAAC,KAAK,CAAC;MACvBQ,mBAAmB,CAAC,IAAI,CAAC;IAC3B,CAAC,SAAS;MACRF,mBAAmB,CAAC,KAAK,CAAC;IAC5B;EACF,CAAC;;EAED;EACA,MAAMiC,gBAAgB,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;IACrD,MAAMnB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAI,CAACF,KAAK,EAAE;MACVlB,kBAAkB,CAAC,kCAAkC,CAAC;MACtDF,eAAe,CAAC,IAAI,CAAC;MACrB;IACF;IAEA,IAAI;MACF,MAAMhD,KAAK,CAACwF,IAAI,CAAC,GAAGhF,GAAG,gBAAgB8E,QAAQ,OAAO,EAAE;QACtDC,QAAQ,EAAEA,QAAQ,CAAC;MACrB,CAAC,EAAE;QACDP,OAAO,EAAE;UACP,eAAe,EAAE,UAAUZ,KAAK;QAClC;MACF,CAAC,CAAC;;MAEF;MACA,MAAMS,iBAAiB,CAAC3C,EAAE,CAAC;IAE7B,CAAC,CAAC,OAAOK,KAAK,EAAE;MAAA,IAAAkD,gBAAA,EAAAC,gBAAA,EAAAC,gBAAA;MACdf,OAAO,CAACrC,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAE/C,IAAIqD,YAAY,GAAG,0BAA0B;MAC7C,IAAI,EAAAH,gBAAA,GAAAlD,KAAK,CAACkC,QAAQ,cAAAgB,gBAAA,uBAAdA,gBAAA,CAAgBN,MAAM,MAAK,GAAG,EAAE;QAClCS,YAAY,GAAG,kCAAkC;QACjDvB,YAAY,CAACe,UAAU,CAAC,OAAO,CAAC;QAChCf,YAAY,CAACe,UAAU,CAAC,MAAM,CAAC;QAC/B5B,kBAAkB,CAAC,KAAK,CAAC;MAC3B,CAAC,MAAM,IAAI,EAAAkC,gBAAA,GAAAnD,KAAK,CAACkC,QAAQ,cAAAiB,gBAAA,uBAAdA,gBAAA,CAAgBP,MAAM,MAAK,GAAG,EAAE;QACzCS,YAAY,GAAG,uCAAuC;MACxD,CAAC,MAAM,IAAI,EAAAD,gBAAA,GAAApD,KAAK,CAACkC,QAAQ,cAAAkB,gBAAA,uBAAdA,gBAAA,CAAgBR,MAAM,MAAK,GAAG,EAAE;QACzCS,YAAY,GAAG,oCAAoC;MACrD;MAEA1C,kBAAkB,CAAC0C,YAAY,CAAC;MAChC5C,eAAe,CAAC,IAAI,CAAC;MACrB,MAAMT,KAAK;IACb;EACF,CAAC;;EAED;EACAxC,SAAS,CAAC,MAAM;IACd,MAAM8F,mBAAmB,GAAG,MAAAA,CAAA,KAAY;MACtC,IAAI,CAAC3D,EAAE,EAAE;MAETI,UAAU,CAAC,IAAI,CAAC;MAChBgB,mBAAmB,CAAC,KAAK,CAAC;;MAE1B;MACA,MAAMwC,aAAa,GAAG3B,eAAe,CAAC,CAAC;MAEvC,IAAI;QACF;QACA,MAAMI,iBAAiB,CAACrC,EAAE,CAAC;;QAE3B;QACA2C,iBAAiB,CAAC3C,EAAE,CAAC;;QAErB;QACA4C,kBAAkB,CAAC5C,EAAE,CAAC;;QAEtB;QACA,IAAI4D,aAAa,EAAE;UACjB,MAAMf,oBAAoB,CAAC7C,EAAE,CAAC;QAChC,CAAC,MAAM;UACLoB,mBAAmB,CAAC,IAAI,CAAC;UACzBR,gBAAgB,CAAC,KAAK,CAAC;QACzB;MACF,CAAC,CAAC,OAAOP,KAAK,EAAE;QACdqC,OAAO,CAACrC,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACvD,CAAC,SAAS;QACRD,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDuD,mBAAmB,CAAC,CAAC;EACvB,CAAC,EAAE,CAAC3D,EAAE,CAAC,CAAC;;EAER;EACAnC,SAAS,CAAC,MAAM;IACd,MAAMgG,gBAAgB,GAAGA,CAAA,KAAM;MAC7B,MAAMC,gBAAgB,GAAGzC,eAAe;MACxC,MAAM0C,gBAAgB,GAAG9B,eAAe,CAAC,CAAC;MAE1C,IAAI8B,gBAAgB,KAAKD,gBAAgB,EAAE;QACzC,IAAIC,gBAAgB,IAAI/D,EAAE,EAAE;UAC1B;UACA6C,oBAAoB,CAAC7C,EAAE,CAAC;QAC1B,CAAC,MAAM,IAAI,CAAC+D,gBAAgB,EAAE;UAC5B;UACAnD,gBAAgB,CAAC,KAAK,CAAC;UACvBQ,mBAAmB,CAAC,IAAI,CAAC;QAC3B;MACF;IACF,CAAC;;IAED;IACA4C,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAEJ,gBAAgB,CAAC;;IAEpD;IACAG,MAAM,CAACC,gBAAgB,CAAC,OAAO,EAAEJ,gBAAgB,CAAC;IAElD,OAAO,MAAM;MACXG,MAAM,CAACE,mBAAmB,CAAC,SAAS,EAAEL,gBAAgB,CAAC;MACvDG,MAAM,CAACE,mBAAmB,CAAC,OAAO,EAAEL,gBAAgB,CAAC;IACvD,CAAC;EACH,CAAC,EAAE,CAAC7D,EAAE,EAAEqB,eAAe,CAAC,CAAC;;EAEzB;EACA,MAAM8C,qBAAqB,GAAG,MAAAA,CAAA,KAAY;IACxC,MAAMjC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAI,CAACF,KAAK,EAAE;MACVlB,kBAAkB,CAAC,wCAAwC,CAAC;MAC5DF,eAAe,CAAC,IAAI,CAAC;MACrB;IACF;IAEAI,mBAAmB,CAAC,IAAI,CAAC;IAEzB,IAAI;MACF,IAAIP,aAAa,EAAE;QACjB;QACA,MAAM7C,KAAK,CAACsG,MAAM,CAAC,GAAG9F,GAAG,uBAAuB,EAAE;UAChDmE,IAAI,EAAE;YAAE4B,OAAO,EAAEC,QAAQ,CAACtE,EAAE;UAAE,CAAC;UAC/B8C,OAAO,EAAE;YACP,eAAe,EAAE,UAAUZ,KAAK;UAClC;QACF,CAAC,CAAC;QAEFtB,gBAAgB,CAAC,KAAK,CAAC;QACvBI,kBAAkB,CAAC,8BAA8B,CAAC;MACpD,CAAC,MAAM;QACL;QACA,MAAMlD,KAAK,CAACwF,IAAI,CAAC,GAAGhF,GAAG,oBAAoB,EAAE;UAC3C+F,OAAO,EAAEC,QAAQ,CAACtE,EAAE;QACtB,CAAC,EAAE;UACD8C,OAAO,EAAE;YACP,eAAe,EAAE,UAAUZ,KAAK;UAClC;QACF,CAAC,CAAC;QAEFtB,gBAAgB,CAAC,IAAI,CAAC;QACtBI,kBAAkB,CAAC,0BAA0B,CAAC;MAChD;MAEAF,eAAe,CAAC,IAAI,CAAC;IACvB,CAAC,CAAC,OAAOT,KAAK,EAAE;MAAA,IAAAkE,gBAAA,EAAAC,gBAAA,EAAAC,gBAAA;MACd/B,OAAO,CAACrC,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MAEjD,IAAIqD,YAAY,GAAG,4BAA4B;MAC/C,IAAI,EAAAa,gBAAA,GAAAlE,KAAK,CAACkC,QAAQ,cAAAgC,gBAAA,uBAAdA,gBAAA,CAAgBtB,MAAM,MAAK,GAAG,EAAE;QAClCS,YAAY,GAAG,+BAA+B;MAChD,CAAC,MAAM,IAAI,EAAAc,gBAAA,GAAAnE,KAAK,CAACkC,QAAQ,cAAAiC,gBAAA,uBAAdA,gBAAA,CAAgBvB,MAAM,MAAK,GAAG,EAAE;QACzCS,YAAY,GAAG,wCAAwC;QACvDvB,YAAY,CAACe,UAAU,CAAC,OAAO,CAAC;QAChCf,YAAY,CAACe,UAAU,CAAC,MAAM,CAAC;QAC/BtC,gBAAgB,CAAC,KAAK,CAAC;QACvBU,kBAAkB,CAAC,KAAK,CAAC;MAC3B,CAAC,MAAM,IAAI,EAAAmD,gBAAA,GAAApE,KAAK,CAACkC,QAAQ,cAAAkC,gBAAA,uBAAdA,gBAAA,CAAgBxB,MAAM,MAAK,GAAG,EAAE;QACzCS,YAAY,GAAG/C,aAAa,GAAG,8BAA8B,GAAG,qBAAqB;MACvF;MAEAK,kBAAkB,CAAC0C,YAAY,CAAC;MAChC5C,eAAe,CAAC,IAAI,CAAC;IACvB,CAAC,SAAS;MACRI,mBAAmB,CAAC,KAAK,CAAC;IAC5B;EACF,CAAC;EAED,MAAMwD,iBAAiB,GAAIC,OAAO,IAAK;IACrCjE,kBAAkB,CAACiE,OAAO,CAAC;IAC3BnE,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,MAAMoE,UAAU,GAAIC,UAAU,IAAK;IACjC,OAAO,IAAIC,IAAI,CAACD,UAAU,CAAC,CAACE,kBAAkB,CAAC,OAAO,EAAE;MACtDC,IAAI,EAAE,SAAS;MACfC,KAAK,EAAE,MAAM;MACbC,GAAG,EAAE;IACP,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,cAAc,GAAIC,OAAO,IAAK;IAClC,MAAMC,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACH,OAAO,GAAG,EAAE,CAAC;IACtC,MAAMI,IAAI,GAAGJ,OAAO,GAAG,EAAE;IACzB,OAAOC,KAAK,GAAG,CAAC,GAAG,GAAGA,KAAK,KAAKG,IAAI,GAAG,GAAG,GAAGA,IAAI,GAAG;EACtD,CAAC;;EAED;EACA,MAAMC,uBAAuB,GAAGA,CAAA,KAAM;IACpC;IACA,IAAI,CAACpE,eAAe,EAAE;MACpB,OAAO;QACLqE,SAAS,eAAEnG,OAAA,CAACnB,WAAW;UAAAuH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;QAC1BC,SAAS,EAAE,EAAE;QACbC,IAAI,EAAE,2BAA2B;QACjCC,QAAQ,EAAE;MACZ,CAAC;IACH;;IAEA;IACA,IAAIhF,gBAAgB,IAAI,CAACE,gBAAgB,EAAE;MACzC,OAAO;QACLuE,SAAS,eAAEnG,OAAA,CAACnB,WAAW;UAAAuH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;QAC1BC,SAAS,EAAE,EAAE;QACbC,IAAI,EAAE,YAAY;QAClBC,QAAQ,EAAE;MACZ,CAAC;IACH;;IAEA;IACA,IAAItF,aAAa,EAAE;MACjB,OAAO;QACL+E,SAAS,eAAEnG,OAAA,CAAClB,aAAa;UAAAsH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;QAC5BC,SAAS,EAAE,OAAO;QAClBC,IAAI,EAAE,gBAAgB;QACtBC,QAAQ,EAAE;MACZ,CAAC;IACH;;IAEA;IACA,OAAO;MACLP,SAAS,eAAEnG,OAAA,CAACnB,WAAW;QAAAuH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;MAC1BC,SAAS,EAAE,EAAE;MACbC,IAAI,EAAE,kBAAkB;MACxBC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;;EAED;EACA,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9BvD,iBAAiB,CAAC3C,EAAE,CAAC;EACvB,CAAC;;EAED;EACA,IAAIG,OAAO,EAAE;IACX,oBAAOZ,OAAA,CAACN,YAAY;MAAA0G,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACzB;EAEA,IAAIzF,KAAK,EAAE;IACT,oBAAOd,OAAA,CAACL,UAAU;MAACmB,KAAK,EAAEA;IAAM;MAAAsF,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACrC;EAEA,IAAI,CAAC7F,KAAK,EAAE;IACV,oBAAOV,OAAA,CAACJ,aAAa;MAAAwG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC1B;EAEA,MAAMK,oBAAoB,GAAGV,uBAAuB,CAAC,CAAC;EAEtD,oBACElG,OAAA,CAACC,eAAe;IAAA4G,QAAA,gBAEd7G,OAAA,CAAChB,WAAW;MACV0B,KAAK,EAAEA,KAAM;MACboG,aAAa,EAAE3B,iBAAkB;MACjC4B,iBAAiB,EAAEnC,qBAAsB;MACzCgC,oBAAoB,EAAEA,oBAAqB;MAC3CvB,UAAU,EAAEA,UAAW;MACvBO,cAAc,EAAEA;IAAe;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,eAGFvG,OAAA,CAACF,iBAAiB;MAACiD,OAAO,EAAEtC;IAAG;MAAA2F,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAGlCvG,OAAA,CAACf,eAAe;MAAC+H,QAAQ,EAAEtG,KAAK,CAACsG;IAAS;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAG7CvG,OAAA,CAACvB,GAAG;MAACwI,EAAE,EAAE;QAAEC,eAAe,EAAE,SAAS;QAAEC,SAAS,EAAE,OAAO;QAAEC,EAAE,EAAE;MAAE,CAAE;MAAAP,QAAA,eACjE7G,OAAA,CAACtB,SAAS;QAAC2I,QAAQ,EAAC,IAAI;QAAAR,QAAA,gBAEtB7G,OAAA,CAACd,aAAa;UAACoI,MAAM,EAAE5G,KAAK,CAAC4G;QAAO;UAAAlB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAGvCvG,OAAA,CAACb,WAAW;UACVoI,IAAI,EAAE7G,KAAK,CAAC6G,IAAK;UACjBlC,UAAU,EAAEA,UAAW;UACvBvD,eAAe,EAAEA,eAAgB;UACjCiB,OAAO,EAAEtC;QAAG;UAAA2F,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACb,CAAC,eAGFvG,OAAA,CAACZ,WAAW;UACVoI,SAAS,EAAE9G,KAAK,CAAC8G,SAAU;UAC3BC,OAAO,EAAE/G,KAAK,CAAC+G,OAAQ;UACvBpC,UAAU,EAAEA;QAAW;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxB,CAAC,eAGFvG,OAAA,CAACX,cAAc;UAACqI,OAAO,EAAEhH,KAAK,CAACgH;QAAQ;UAAAtB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAG1CvG,OAAA,CAACV,cAAc;UACb8C,OAAO,EAAEA,OAAQ;UACjBE,cAAc,EAAEA,cAAe;UAC/BE,YAAY,EAAEA,YAAa;UAC3B6C,UAAU,EAAEA,UAAW;UACvBsC,YAAY,EAAE/D;QAAiB;UAAAwC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACO;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eAGNvG,OAAA,CAACT,iBAAiB;MAChBwD,OAAO,EAAEtC,EAAG;MACZqB,eAAe,EAAEA,eAAgB;MACjC8F,aAAa,EAAEjB;IAAkB;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,EAGD,CAACrE,oBAAoB,IAAIF,aAAa,CAAC6F,MAAM,GAAG,CAAC,iBAChD7H,OAAA,CAACG,oBAAoB;MAAA0G,QAAA,eACnB7G,OAAA,CAACtB,SAAS;QAAC2I,QAAQ,EAAC,IAAI;QAAAR,QAAA,gBACtB7G,OAAA,CAACK,YAAY;UAACyH,OAAO,EAAC,IAAI;UAACb,EAAE,EAAE;YAAEc,KAAK,EAAE;UAAU,CAAE;UAAAlB,QAAA,EAAC;QAErD;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAc,CAAC,eAEfvG,OAAA,CAACH,KAAK;UAACmI,MAAM,EAAEhG;QAAc;UAAAoE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACQ,CACvB,eAGDvG,OAAA,CAACR,aAAa;MACZyI,IAAI,EAAEjH,WAAY;MAClBkH,OAAO,EAAEA,CAAA,KAAMjH,cAAc,CAAC,KAAK,CAAE;MACrCC,eAAe,EAAEA;IAAgB;MAAAkF,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,eAGFvG,OAAA,CAACP,oBAAoB;MACnBwI,IAAI,EAAE3G,YAAa;MACnB6G,OAAO,EAAE3G,eAAgB;MACzB0G,OAAO,EAAEA,CAAA,KAAM3G,eAAe,CAAC,KAAK;IAAE;MAAA6E,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACa,CAAC;AAEtB;AAAC/F,EAAA,CA5bQD,YAAY;EAAA,QACJ/B,SAAS;AAAA;AAAA4J,GAAA,GADjB7H,YAAY;AA8brB,eAAeA,YAAY;AAAC,IAAAL,EAAA,EAAAE,GAAA,EAAAE,GAAA,EAAA8H,GAAA;AAAAC,YAAA,CAAAnI,EAAA;AAAAmI,YAAA,CAAAjI,GAAA;AAAAiI,YAAA,CAAA/H,GAAA;AAAA+H,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}