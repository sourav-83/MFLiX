{"ast":null,"code":"var _jsxFileName = \"D:\\\\react movie website\\\\frontend\\\\src\\\\components\\\\movie details\\\\CastSection.jsx\";\n// CastSection.jsx\nimport React from 'react';\nimport { Box, Typography, styled } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CastContainer = styled(Box)`\n  margin: 40px 0;\n`;\n_c = CastContainer;\nconst CastGrid = styled(Box)`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));\n  gap: 20px;\n  margin-top: 20px;\n`;\n_c2 = CastGrid;\nconst CastCard = styled(Box)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  cursor: pointer;\n  transition: transform 0.2s;\n  padding: 10px;\n  border-radius: 8px;\n  \n  &:hover {\n    transform: scale(1.05);\n    background-color: rgba(255, 255, 255, 0.1);\n  }\n`;\n_c3 = CastCard;\nconst CastImage = styled('img')`\n  width: 120px;\n  height: 120px;\n  border-radius: 50%;\n  object-fit: cover;\n  border: 3px solid #f5c518;\n  margin-bottom: 10px;\n`;\n_c4 = CastImage;\nconst CastName = styled(Typography)`\n  color: #ffffff;\n  font-size: 14px;\n  font-weight: 600;\n  text-align: center;\n  margin-bottom: 5px;\n`;\n_c5 = CastName;\nconst CastRole = styled(Typography)`\n  color: #cccccc;\n  font-size: 12px;\n  text-align: center;\n  font-style: italic;\n`;\n_c6 = CastRole;\nconst SectionTitle = styled(Typography)`\n  color: #ffffff;\n  font-size: 24px;\n  font-weight: 600;\n  margin-bottom: 20px;\n`;\n_c7 = SectionTitle;\nconst CastSection = ({\n  cast,\n  formatDate,\n  isAuthenticated,\n  movieId,\n  onActorClick,\n  onActorRate\n}) => {\n  if (!cast || cast.length === 0) {\n    return null;\n  }\n  const handleActorClick = actor => {\n    const actorId = actor.ActorID; // Use the correct field name\n\n    if (actorId && onActorClick) {\n      onActorClick(actorId);\n    } else {\n      console.warn('No actor ID found or onActorClick not provided');\n    }\n  };\n  const handleActorRate = (actor, event) => {\n    // Stop the click event from bubbling up to the card click\n    event.stopPropagation();\n    if (onActorRate) {\n      onActorRate(actor, movieId);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(CastContainer, {\n    children: [/*#__PURE__*/_jsxDEV(SectionTitle, {\n      children: \"Cast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CastGrid, {\n      children: cast.map((actor, index) => /*#__PURE__*/_jsxDEV(CastCard, {\n        onClick: () => handleActorClick(actor),\n        children: [/*#__PURE__*/_jsxDEV(CastImage, {\n          src: `/img/${actor.Image}`,\n          alt: actor.Name,\n          onError: e => {\n            e.target.src = '/img/default-actor.jpg';\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CastName, {\n          children: actor.Name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), actor.RoleName && /*#__PURE__*/_jsxDEV(CastRole, {\n          children: [\"as \", actor.RoleName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 32\n        }, this), isAuthenticated && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 1,\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            '& button': {\n              fontSize: '12px',\n              padding: '4px 8px',\n              minWidth: 'auto'\n            }\n          },\n          onClick: e => handleActorRate(actor, e),\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              background: 'rgba(245, 197, 24, 0.1)',\n              border: '1px solid #f5c518',\n              color: '#f5c518',\n              borderRadius: '4px',\n              cursor: 'pointer',\n              fontSize: '12px',\n              padding: '4px 8px'\n            },\n            children: \"Rate Actor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }, this)]\n      }, actor.ActorID || index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_c8 = CastSection;\nexport default CastSection;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n$RefreshReg$(_c, \"CastContainer\");\n$RefreshReg$(_c2, \"CastGrid\");\n$RefreshReg$(_c3, \"CastCard\");\n$RefreshReg$(_c4, \"CastImage\");\n$RefreshReg$(_c5, \"CastName\");\n$RefreshReg$(_c6, \"CastRole\");\n$RefreshReg$(_c7, \"SectionTitle\");\n$RefreshReg$(_c8, \"CastSection\");","map":{"version":3,"names":["React","Box","Typography","styled","jsxDEV","_jsxDEV","CastContainer","_c","CastGrid","_c2","CastCard","_c3","CastImage","_c4","CastName","_c5","CastRole","_c6","SectionTitle","_c7","CastSection","cast","formatDate","isAuthenticated","movieId","onActorClick","onActorRate","length","handleActorClick","actor","actorId","ActorID","console","warn","handleActorRate","event","stopPropagation","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onClick","src","Image","alt","Name","onError","e","target","RoleName","sx","mt","display","alignItems","justifyContent","fontSize","padding","minWidth","style","background","border","color","borderRadius","cursor","_c8","$RefreshReg$"],"sources":["D:/react movie website/frontend/src/components/movie details/CastSection.jsx"],"sourcesContent":["// CastSection.jsx\r\nimport React from 'react';\r\nimport { Box, Typography, styled } from '@mui/material';\r\n\r\nconst CastContainer = styled(Box)`\r\n  margin: 40px 0;\r\n`;\r\n\r\nconst CastGrid = styled(Box)`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));\r\n  gap: 20px;\r\n  margin-top: 20px;\r\n`;\r\n\r\nconst CastCard = styled(Box)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  transition: transform 0.2s;\r\n  padding: 10px;\r\n  border-radius: 8px;\r\n  \r\n  &:hover {\r\n    transform: scale(1.05);\r\n    background-color: rgba(255, 255, 255, 0.1);\r\n  }\r\n`;\r\n\r\nconst CastImage = styled('img')`\r\n  width: 120px;\r\n  height: 120px;\r\n  border-radius: 50%;\r\n  object-fit: cover;\r\n  border: 3px solid #f5c518;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst CastName = styled(Typography)`\r\n  color: #ffffff;\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n  text-align: center;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nconst CastRole = styled(Typography)`\r\n  color: #cccccc;\r\n  font-size: 12px;\r\n  text-align: center;\r\n  font-style: italic;\r\n`;\r\n\r\nconst SectionTitle = styled(Typography)`\r\n  color: #ffffff;\r\n  font-size: 24px;\r\n  font-weight: 600;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst CastSection = ({ cast, formatDate, isAuthenticated, movieId, onActorClick, onActorRate }) => {\r\n  if (!cast || cast.length === 0) {\r\n    return null;\r\n  }\r\n\r\n  const handleActorClick = (actor) => {\r\n    const actorId = actor.ActorID; // Use the correct field name\r\n    \r\n    if (actorId && onActorClick) {\r\n      onActorClick(actorId);\r\n    } else {\r\n      console.warn('No actor ID found or onActorClick not provided');\r\n    }\r\n  };\r\n\r\n  const handleActorRate = (actor, event) => {\r\n    // Stop the click event from bubbling up to the card click\r\n    event.stopPropagation();\r\n    \r\n    if (onActorRate) {\r\n      onActorRate(actor, movieId);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <CastContainer>\r\n      <SectionTitle>Cast</SectionTitle>\r\n      <CastGrid>\r\n        {cast.map((actor, index) => (\r\n          <CastCard \r\n            key={actor.ActorID || index}\r\n            onClick={() => handleActorClick(actor)}\r\n          >\r\n            <CastImage \r\n              src={`/img/${actor.Image}`} \r\n              alt={actor.Name}\r\n              onError={(e) => {\r\n                e.target.src = '/img/default-actor.jpg';\r\n              }}\r\n            />\r\n            <CastName>{actor.Name}</CastName>\r\n            {actor.RoleName && <CastRole>as {actor.RoleName}</CastRole>}\r\n            \r\n            {/* Rating button - only show if user is authenticated */}\r\n            {isAuthenticated && (\r\n              <Box \r\n                sx={{ \r\n                  mt: 1, \r\n                  display: 'flex', \r\n                  alignItems: 'center', \r\n                  justifyContent: 'center',\r\n                  '& button': {\r\n                    fontSize: '12px',\r\n                    padding: '4px 8px',\r\n                    minWidth: 'auto'\r\n                  }\r\n                }}\r\n                onClick={(e) => handleActorRate(actor, e)}\r\n              >\r\n                <button \r\n                  style={{\r\n                    background: 'rgba(245, 197, 24, 0.1)',\r\n                    border: '1px solid #f5c518',\r\n                    color: '#f5c518',\r\n                    borderRadius: '4px',\r\n                    cursor: 'pointer',\r\n                    fontSize: '12px',\r\n                    padding: '4px 8px'\r\n                  }}\r\n                >\r\n                  Rate Actor\r\n                </button>\r\n              </Box>\r\n            )}\r\n          </CastCard>\r\n        ))}\r\n      </CastGrid>\r\n    </CastContainer>\r\n  );\r\n};\r\n\r\nexport default CastSection;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}