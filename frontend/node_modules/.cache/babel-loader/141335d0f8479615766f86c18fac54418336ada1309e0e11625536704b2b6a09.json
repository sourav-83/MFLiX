{"ast":null,"code":"var _jsxFileName = \"D:\\\\react movie website\\\\frontend\\\\src\\\\pages\\\\CategoryMovies.jsx\",\n  _s = $RefreshSig$();\n// CategoryMovies.jsx\nimport Header from '../components/common/Header';\nimport { categoryMovies } from '../services/api';\nimport { Box, styled, Typography, Divider } from '@mui/material';\nimport { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport MoviesList from '../components/common/MoviesList';\nimport { POPULAR_API_URL, UPCOMING_API_URL, TOPRATED_API_URL, moviesType } from '../constants/constant';\nimport Carousel from 'react-multi-carousel';\nimport 'react-multi-carousel/lib/styles.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst responsive = {\n  desktop: {\n    breakpoint: {\n      max: 3000,\n      min: 1024\n    },\n    items: 1\n  },\n  tablet: {\n    breakpoint: {\n      max: 1024,\n      min: 464\n    },\n    items: 1\n  },\n  mobile: {\n    breakpoint: {\n      max: 464,\n      min: 0\n    },\n    items: 1\n  }\n};\nconst StyledBanner = styled('div')`\n  height: 450px;\n  width: 100%;\n  background-size: cover;\n  background-position: center;\n`;\n_c = StyledBanner;\nconst Component = styled(Box)`\n  width: 80%;\n  margin: auto;\n`;\n_c2 = Component;\nconst Container = styled(Box)`\n  background: #121212;\n  padding: 20px;\n  color: white;\n`;\n_c3 = Container;\nconst CategoryMovies = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const {\n    search\n  } = useLocation();\n  useEffect(() => {\n    const getData = async API_URL => {\n      const response = await categoryMovies(API_URL);\n      setMovies(response || []);\n    };\n    let API_URL;\n    if (search.includes('popular')) API_URL = POPULAR_API_URL;else if (search.includes('upcoming')) API_URL = UPCOMING_API_URL;else if (search.includes('toprated')) API_URL = TOPRATED_API_URL;\n    getData(API_URL);\n  }, [search]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Component, {\n      children: [/*#__PURE__*/_jsxDEV(Carousel, {\n        responsive: responsive,\n        swipeable: false,\n        draggable: false,\n        showDots: false,\n        infinite: true,\n        autoPlay: true,\n        autoPlaySpeed: 3000,\n        keyBoardControl: true,\n        children: movies.map(movie => /*#__PURE__*/_jsxDEV(StyledBanner, {\n          style: {\n            backgroundImage: `url(/img/${movie.posterimage})`\n          }\n        }, movie.movieid, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"IMDb Charts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          children: [\"IMDb \", moviesType[search.split('=')[1]], \" Movies\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          style: {\n            fontSize: 12,\n            margin: 5\n          },\n          children: [\"IMDb top \", movies.length, \" as rated by regular IMDb voters.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          style: {\n            backgroundColor: '#444'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MoviesList, {\n          movies: movies\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(CategoryMovies, \"6jIPy4U2d4FTT1aj/LpOD1DNy/Q=\", false, function () {\n  return [useLocation];\n});\n_c4 = CategoryMovies;\nexport default CategoryMovies;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"StyledBanner\");\n$RefreshReg$(_c2, \"Component\");\n$RefreshReg$(_c3, \"Container\");\n$RefreshReg$(_c4, \"CategoryMovies\");","map":{"version":3,"names":["Header","categoryMovies","Box","styled","Typography","Divider","useState","useEffect","useLocation","MoviesList","POPULAR_API_URL","UPCOMING_API_URL","TOPRATED_API_URL","moviesType","Carousel","jsxDEV","_jsxDEV","Fragment","_Fragment","responsive","desktop","breakpoint","max","min","items","tablet","mobile","StyledBanner","_c","Component","_c2","Container","_c3","CategoryMovies","_s","movies","setMovies","search","getData","API_URL","response","includes","children","swipeable","draggable","showDots","infinite","autoPlay","autoPlaySpeed","keyBoardControl","map","movie","style","backgroundImage","posterimage","movieid","fileName","_jsxFileName","lineNumber","columnNumber","variant","split","fontSize","margin","length","backgroundColor","_c4","$RefreshReg$"],"sources":["D:/react movie website/frontend/src/pages/CategoryMovies.jsx"],"sourcesContent":["// CategoryMovies.jsx\r\nimport Header from '../components/common/Header';\r\nimport { categoryMovies } from '../services/api';\r\n\r\nimport { Box, styled, Typography, Divider } from '@mui/material';\r\nimport { useState, useEffect } from 'react';\r\n\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport MoviesList from '../components/common/MoviesList';\r\n\r\nimport { POPULAR_API_URL, UPCOMING_API_URL, TOPRATED_API_URL, moviesType } from '../constants/constant';\r\n\r\nimport Carousel from 'react-multi-carousel';\r\nimport 'react-multi-carousel/lib/styles.css';\r\n\r\nconst responsive = {\r\n  desktop: { breakpoint: { max: 3000, min: 1024 }, items: 1 },\r\n  tablet: { breakpoint: { max: 1024, min: 464 }, items: 1 },\r\n  mobile: { breakpoint: { max: 464, min: 0 }, items: 1 },\r\n};\r\n\r\nconst StyledBanner = styled('div')`\r\n  height: 450px;\r\n  width: 100%;\r\n  background-size: cover;\r\n  background-position: center;\r\n`;\r\n\r\nconst Component = styled(Box)`\r\n  width: 80%;\r\n  margin: auto;\r\n`;\r\n\r\nconst Container = styled(Box)`\r\n  background: #121212;\r\n  padding: 20px;\r\n  color: white;\r\n`;\r\n\r\nconst CategoryMovies = () => {\r\n  const [movies, setMovies] = useState([]);\r\n  const { search } = useLocation();\r\n\r\n  useEffect(() => {\r\n    const getData = async (API_URL) => {\r\n      const response = await categoryMovies(API_URL);\r\n      setMovies(response || []);\r\n    };\r\n\r\n    let API_URL;\r\n    if (search.includes('popular')) API_URL = POPULAR_API_URL;\r\n    else if (search.includes('upcoming')) API_URL = UPCOMING_API_URL;\r\n    else if (search.includes('toprated')) API_URL = TOPRATED_API_URL;\r\n\r\n    getData(API_URL);\r\n  }, [search]);\r\n\r\n  return (\r\n    <>\r\n      <Component>\r\n        <Carousel\r\n          responsive={responsive}\r\n          swipeable={false}\r\n          draggable={false}\r\n          showDots={false}\r\n          infinite={true}\r\n          autoPlay={true}\r\n          autoPlaySpeed={3000}\r\n          keyBoardControl={true}\r\n        >\r\n          {movies.map((movie) => (\r\n            <StyledBanner\r\n              key={movie.movieid}\r\n              style={{ backgroundImage: `url(/img/${movie.posterimage})` }}\r\n            />\r\n          ))}\r\n        </Carousel>\r\n        <Container>\r\n          <Typography variant=\"h6\">IMDb Charts</Typography>\r\n          <Typography variant=\"h4\">IMDb {moviesType[search.split('=')[1]]} Movies</Typography>\r\n          <Typography style={{ fontSize: 12, margin: 5 }}>\r\n            IMDb top {movies.length} as rated by regular IMDb voters.\r\n          </Typography>\r\n          <Divider style={{ backgroundColor: '#444' }} />\r\n          <MoviesList movies={movies} />\r\n        </Container>\r\n      </Component>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CategoryMovies;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}